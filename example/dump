{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/nodes",
        "resourceVersion": "263227"
    },
    "items": [
        {
            "metadata": {
                "name": "ip-10-10-200-181.us-west-2.compute.internal",
                "selfLink": "/api/v1/nodes/ip-10-10-200-181.us-west-2.compute.internal",
                "uid": "a2a33086-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "263221",
                "creationTimestamp": "2019-12-09T19:10:59Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "c5.large",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "us-west-2",
                    "failure-domain.beta.kubernetes.io/zone": "us-west-2b",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-10-10-200-181.us-west-2.compute.internal",
                    "kubernetes.io/lifecycle": "spot",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-west-2b/i-0e976ca7eb10352e1"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "2",
                    "ephemeral-storage": "104845292Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3793924Ki",
                    "pods": "29"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "1930m",
                    "ephemeral-storage": "95551679124",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "2743300Ki",
                    "pods": "29"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:41Z",
                        "lastTransitionTime": "2019-12-09T19:10:59Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:41Z",
                        "lastTransitionTime": "2019-12-09T19:10:59Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:41Z",
                        "lastTransitionTime": "2019-12-09T19:10:59Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2019-12-10T18:20:41Z",
                        "lastTransitionTime": "2019-12-09T19:11:49Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.10.200.181"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-10-10-200-181.us-west-2.compute.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-10-10-200-181.us-west-2.compute.internal"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "ec28658b5a32bd257926f499443ede90",
                    "systemUUID": "EC28658B-5A32-BD25-7926-F499443EDE90",
                    "bootID": "acca83f5-5a5e-4357-bbde-3b1e04c939b6",
                    "kernelVersion": "4.14.152-127.182.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://18.9.9",
                    "kubeletVersion": "v1.14.7-eks-1861c5",
                    "kubeProxyVersion": "v1.14.7-eks-1861c5",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "quay.io/kubernetes-ingress-controller/nginx-ingress-controller@sha256:d0b22f715fcea5598ef7f869d308b55289a3daaa12922fa52a1abf17703c88e7",
                            "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1"
                        ],
                        "sizeBytes": 483167446
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3"
                        ],
                        "sizeBytes": 290731139
                    },
                    {
                        "names": [
                            "kiwigrid/k8s-sidecar@sha256:af151f677a63cdfcdfc18a4e3043520ec506d5e116692e5190f6f765dca42a52",
                            "kiwigrid/k8s-sidecar:0.1.20"
                        ],
                        "sizeBytes": 216768728
                    },
                    {
                        "names": [
                            "grafana/grafana@sha256:8c2238eea9d3d39aeb6174db2e30b233fd2546128ec1fa1bc64f8058afd51e68",
                            "grafana/grafana:6.4.2"
                        ],
                        "sizeBytes": 205960390
                    },
                    {
                        "names": [
                            "grafana/promtail@sha256:c67f3661a05222091d62baad97e9c5ae7829826a95dc653850fca2ca6af5faba",
                            "grafana/promtail:v1.0.0"
                        ],
                        "sizeBytes": 139605440
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6"
                        ],
                        "sizeBytes": 82044796
                    },
                    {
                        "names": [
                            "jettech/kube-webhook-certgen@sha256:58fde0ddd7a0d1bf1483fed53e363144ae8741d8a2d6c129422e8b1b9aa0543c",
                            "jettech/kube-webhook-certgen:v1.0.0"
                        ],
                        "sizeBytes": 51532105
                    },
                    {
                        "names": [
                            "quay.io/jetstack/cert-manager-controller@sha256:2ab92955f22cc6ba5ffa2683520a007b0c0dc540c8fe8259ed2cd25b44666a11",
                            "quay.io/jetstack/cert-manager-controller:v0.11.1"
                        ],
                        "sizeBytes": 48460492
                    },
                    {
                        "names": [
                            "quay.io/coreos/kube-state-metrics@sha256:f75c3e5c5c7f65846ddd6883d6187b38f77721a3938f241c9e5d0ebe7beb8e19",
                            "quay.io/coreos/kube-state-metrics:v1.8.0"
                        ],
                        "sizeBytes": 33616576
                    },
                    {
                        "names": [
                            "quay.io/prometheus/node-exporter@sha256:a2f29256e53cc3e0b64d7a472512600b2e9410347d53cdc85b49f659c17e02ee",
                            "quay.io/prometheus/node-exporter:v0.18.1"
                        ],
                        "sizeBytes": 22933477
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause-amd64@sha256:bea77c323c47f7b573355516acf927691182d1333333d1f41b7544012fab7adf",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause-amd64:3.1"
                        ],
                        "sizeBytes": 742472
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ip-10-10-201-127.us-west-2.compute.internal",
                "selfLink": "/api/v1/nodes/ip-10-10-201-127.us-west-2.compute.internal",
                "uid": "a50a7655-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "263191",
                "creationTimestamp": "2019-12-09T19:11:03Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "c5.large",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "us-west-2",
                    "failure-domain.beta.kubernetes.io/zone": "us-west-2a",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-10-10-201-127.us-west-2.compute.internal",
                    "kubernetes.io/lifecycle": "normal",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-west-2a/i-03f275aa9d512e27a"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "2",
                    "ephemeral-storage": "104845292Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3793924Ki",
                    "pods": "29"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "1930m",
                    "ephemeral-storage": "95551679124",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "2743300Ki",
                    "pods": "29"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:31Z",
                        "lastTransitionTime": "2019-12-09T19:11:03Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:31Z",
                        "lastTransitionTime": "2019-12-09T19:11:03Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:31Z",
                        "lastTransitionTime": "2019-12-09T19:11:03Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2019-12-10T18:20:31Z",
                        "lastTransitionTime": "2019-12-09T19:11:23Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.10.201.127"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-10-10-201-127.us-west-2.compute.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-10-10-201-127.us-west-2.compute.internal"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "ec2d6db721858f843f6c622ea8e382dc",
                    "systemUUID": "EC2D6DB7-2185-8F84-3F6C-622EA8E382DC",
                    "bootID": "38b8ecbc-9495-4f02-b058-ecbc8a54036c",
                    "kernelVersion": "4.14.152-127.182.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://18.9.9",
                    "kubeletVersion": "v1.14.7-eks-1861c5",
                    "kubeProxyVersion": "v1.14.7-eks-1861c5",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3"
                        ],
                        "sizeBytes": 290731139
                    },
                    {
                        "names": [
                            "grafana/promtail@sha256:c67f3661a05222091d62baad97e9c5ae7829826a95dc653850fca2ca6af5faba",
                            "grafana/promtail:v1.0.0"
                        ],
                        "sizeBytes": 139605440
                    },
                    {
                        "names": [
                            "bitnami/external-dns@sha256:049c03a37c551c7e6b9c4c2702056c595b34ed516fcb3a4b1b0e57da720b5c23",
                            "bitnami/external-dns:0.5.17-debian-9-r50"
                        ],
                        "sizeBytes": 124012603
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6"
                        ],
                        "sizeBytes": 82044796
                    },
                    {
                        "names": [
                            "quay.io/prometheus/alertmanager@sha256:7dbf4949a317a056d11ed8f379826b04d0665fad5b9334e1d69b23e946056cd3",
                            "quay.io/prometheus/alertmanager:v0.19.0"
                        ],
                        "sizeBytes": 53228562
                    },
                    {
                        "names": [
                            "quay.io/jetstack/cert-manager-controller@sha256:2ab92955f22cc6ba5ffa2683520a007b0c0dc540c8fe8259ed2cd25b44666a11",
                            "quay.io/jetstack/cert-manager-controller:v0.11.1"
                        ],
                        "sizeBytes": 48460492
                    },
                    {
                        "names": [
                            "grafana/loki@sha256:4a4bda3ec83720536bd84d08c91d4e022fb2d2816706b25b9f7ba9981fd0a89f",
                            "grafana/loki:v1.0.0"
                        ],
                        "sizeBytes": 44251450
                    },
                    {
                        "names": [
                            "quay.io/jetstack/cert-manager-cainjector@sha256:9eaad595c918514142cf269dc9bd9745a8b0ddb5e04079b59cc0c0e324d8aa94",
                            "quay.io/jetstack/cert-manager-cainjector:v0.11.1"
                        ],
                        "sizeBytes": 37318772
                    },
                    {
                        "names": [
                            "quay.io/prometheus/node-exporter@sha256:a2f29256e53cc3e0b64d7a472512600b2e9410347d53cdc85b49f659c17e02ee",
                            "quay.io/prometheus/node-exporter:v0.18.1"
                        ],
                        "sizeBytes": 22933477
                    },
                    {
                        "names": [
                            "quay.io/coreos/configmap-reload@sha256:e2fd60ff0ae4500a75b80ebaa30e0e7deba9ad107833e8ca53f0047c42c5a057",
                            "quay.io/coreos/configmap-reload:v0.0.1"
                        ],
                        "sizeBytes": 4785056
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause-amd64@sha256:bea77c323c47f7b573355516acf927691182d1333333d1f41b7544012fab7adf",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause-amd64:3.1"
                        ],
                        "sizeBytes": 742472
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ip-10-10-201-128.us-west-2.compute.internal",
                "selfLink": "/api/v1/nodes/ip-10-10-201-128.us-west-2.compute.internal",
                "uid": "a12b62fd-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "263101",
                "creationTimestamp": "2019-12-09T19:10:57Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "c5.large",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "us-west-2",
                    "failure-domain.beta.kubernetes.io/zone": "us-west-2a",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-10-10-201-128.us-west-2.compute.internal",
                    "kubernetes.io/lifecycle": "spot",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-west-2a/i-09474c2af19d22da2"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "2",
                    "ephemeral-storage": "104845292Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3793924Ki",
                    "pods": "29"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "1930m",
                    "ephemeral-storage": "95551679124",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "2743300Ki",
                    "pods": "29"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:01Z",
                        "lastTransitionTime": "2019-12-09T19:10:57Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:01Z",
                        "lastTransitionTime": "2019-12-09T19:10:57Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:01Z",
                        "lastTransitionTime": "2019-12-09T19:10:57Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2019-12-10T18:20:01Z",
                        "lastTransitionTime": "2019-12-09T19:11:17Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.10.201.128"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-10-10-201-128.us-west-2.compute.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-10-10-201-128.us-west-2.compute.internal"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "ec2a1e07fe5987c7e1981cb5d419c32b",
                    "systemUUID": "EC2A1E07-FE59-87C7-E198-1CB5D419C32B",
                    "bootID": "7ac30b57-5424-4dfd-97c2-71cadc818b3b",
                    "kernelVersion": "4.14.152-127.182.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://18.9.9",
                    "kubeletVersion": "v1.14.7-eks-1861c5",
                    "kubeProxyVersion": "v1.14.7-eks-1861c5",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3"
                        ],
                        "sizeBytes": 290731139
                    },
                    {
                        "names": [
                            "grafana/promtail@sha256:c67f3661a05222091d62baad97e9c5ae7829826a95dc653850fca2ca6af5faba",
                            "grafana/promtail:v1.0.0"
                        ],
                        "sizeBytes": 139605440
                    },
                    {
                        "names": [
                            "quay.io/prometheus/prometheus@sha256:0a8caa2e9f19907608915db6e62a67383fe44b9876a467b297ee6f64e51dd58a",
                            "quay.io/prometheus/prometheus:v2.13.1"
                        ],
                        "sizeBytes": 128568244
                    },
                    {
                        "names": [
                            "bitnami/external-dns@sha256:adbd733dcbb86273636155ba94997f29f80becb1544f3f9841f6ad47d745c9fd",
                            "bitnami/external-dns:0.5.16-debian-9-r8"
                        ],
                        "sizeBytes": 128183161
                    },
                    {
                        "names": [
                            "bitnami/external-dns@sha256:049c03a37c551c7e6b9c4c2702056c595b34ed516fcb3a4b1b0e57da720b5c23",
                            "bitnami/external-dns:0.5.17-debian-9-r50"
                        ],
                        "sizeBytes": 124012603
                    },
                    {
                        "names": [
                            "gcr.io/kubernetes-helm/tiller@sha256:3c70ee359d3ec305ca469395a2481b2375d569c6b4a928389ca07d829d12ec51",
                            "gcr.io/kubernetes-helm/tiller:v2.16.1"
                        ],
                        "sizeBytes": 91160017
                    },
                    {
                        "names": [
                            "gcr.io/kubernetes-helm/tiller@sha256:39bb81aa9299390ef1d9e472531da24e98234db46664e431001a5fd6d0611114",
                            "gcr.io/kubernetes-helm/tiller:v2.15.1"
                        ],
                        "sizeBytes": 88116689
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6"
                        ],
                        "sizeBytes": 82044796
                    },
                    {
                        "names": [
                            "jettech/kube-webhook-certgen@sha256:58fde0ddd7a0d1bf1483fed53e363144ae8741d8a2d6c129422e8b1b9aa0543c",
                            "jettech/kube-webhook-certgen:v1.0.0"
                        ],
                        "sizeBytes": 51532105
                    },
                    {
                        "names": [
                            "quay.io/jetstack/cert-manager-webhook@sha256:8beb6d4e7355fef23b08a9cf0e4d80d0d511f3d9a6e62bbc5a9e80efcd36cc0d",
                            "quay.io/jetstack/cert-manager-webhook:v0.11.1"
                        ],
                        "sizeBytes": 48824261
                    },
                    {
                        "names": [
                            "quay.io/jetstack/cert-manager-controller@sha256:2ab92955f22cc6ba5ffa2683520a007b0c0dc540c8fe8259ed2cd25b44666a11",
                            "quay.io/jetstack/cert-manager-controller:v0.11.1"
                        ],
                        "sizeBytes": 48460492
                    },
                    {
                        "names": [
                            "quay.io/jetstack/cert-manager-cainjector@sha256:9eaad595c918514142cf269dc9bd9745a8b0ddb5e04079b59cc0c0e324d8aa94",
                            "quay.io/jetstack/cert-manager-cainjector:v0.11.1"
                        ],
                        "sizeBytes": 37318772
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns@sha256:c85954b828a5627b9f3c4540893ab9d8a4be5f8da7513882ad122e08f5c2e60a",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.3.1"
                        ],
                        "sizeBytes": 35174083
                    },
                    {
                        "names": [
                            "quay.io/prometheus/node-exporter@sha256:a2f29256e53cc3e0b64d7a472512600b2e9410347d53cdc85b49f659c17e02ee",
                            "quay.io/prometheus/node-exporter:v0.18.1"
                        ],
                        "sizeBytes": 22933477
                    },
                    {
                        "names": [
                            "quay.io/coreos/prometheus-config-reloader@sha256:459bc1b1fc51420cd244b082fe14444f6d8596997c2e40f52c08d1f5a09ab860",
                            "quay.io/coreos/prometheus-config-reloader:v0.34.0"
                        ],
                        "sizeBytes": 10152002
                    },
                    {
                        "names": [
                            "quay.io/coreos/configmap-reload@sha256:e2fd60ff0ae4500a75b80ebaa30e0e7deba9ad107833e8ca53f0047c42c5a057",
                            "quay.io/coreos/configmap-reload:v0.0.1"
                        ],
                        "sizeBytes": 4785056
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause-amd64@sha256:bea77c323c47f7b573355516acf927691182d1333333d1f41b7544012fab7adf",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause-amd64:3.1"
                        ],
                        "sizeBytes": 742472
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ip-10-10-202-30.us-west-2.compute.internal",
                "selfLink": "/api/v1/nodes/ip-10-10-202-30.us-west-2.compute.internal",
                "uid": "a4e26281-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "263190",
                "creationTimestamp": "2019-12-09T19:11:03Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "c5.large",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "us-west-2",
                    "failure-domain.beta.kubernetes.io/zone": "us-west-2c",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-10-10-202-30.us-west-2.compute.internal",
                    "kubernetes.io/lifecycle": "normal",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-west-2c/i-0fc383ab4b214eea3"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "2",
                    "ephemeral-storage": "104845292Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3793924Ki",
                    "pods": "29"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "1930m",
                    "ephemeral-storage": "95551679124",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "2743300Ki",
                    "pods": "29"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:31Z",
                        "lastTransitionTime": "2019-12-09T19:11:03Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:31Z",
                        "lastTransitionTime": "2019-12-09T19:11:03Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-12-10T18:20:31Z",
                        "lastTransitionTime": "2019-12-09T19:11:03Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2019-12-10T18:20:31Z",
                        "lastTransitionTime": "2019-12-09T19:11:23Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.10.202.30"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-10-10-202-30.us-west-2.compute.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-10-10-202-30.us-west-2.compute.internal"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "ec20a1a4b9f1eded3835cd8963564e69",
                    "systemUUID": "EC20A1A4-B9F1-EDED-3835-CD8963564E69",
                    "bootID": "cbaa146d-2106-41cb-8e37-eeec9481d42f",
                    "kernelVersion": "4.14.152-127.182.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://18.9.9",
                    "kubeletVersion": "v1.14.7-eks-1861c5",
                    "kubeProxyVersion": "v1.14.7-eks-1861c5",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3"
                        ],
                        "sizeBytes": 290731139
                    },
                    {
                        "names": [
                            "grafana/promtail@sha256:c67f3661a05222091d62baad97e9c5ae7829826a95dc653850fca2ca6af5faba",
                            "grafana/promtail:v1.0.0"
                        ],
                        "sizeBytes": 139605440
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6"
                        ],
                        "sizeBytes": 82044796
                    },
                    {
                        "names": [
                            "quay.io/bitnami/sealed-secrets-controller@sha256:229255446eba090037fd334122259c1e7f219bf13c63d2ba989705255cd383ad",
                            "quay.io/bitnami/sealed-secrets-controller:v0.8.3"
                        ],
                        "sizeBytes": 54198862
                    },
                    {
                        "names": [
                            "quay.io/jetstack/cert-manager-webhook@sha256:8beb6d4e7355fef23b08a9cf0e4d80d0d511f3d9a6e62bbc5a9e80efcd36cc0d",
                            "quay.io/jetstack/cert-manager-webhook:v0.11.1"
                        ],
                        "sizeBytes": 48824261
                    },
                    {
                        "names": [
                            "quay.io/coreos/prometheus-operator@sha256:c0bcb231fe67cd11fd26f7adf5ac1080dfac189ac94705538bd4ab7dd99a98a9",
                            "quay.io/coreos/prometheus-operator:v0.34.0"
                        ],
                        "sizeBytes": 45519458
                    },
                    {
                        "names": [
                            "quay.io/coreos/kube-state-metrics@sha256:f75c3e5c5c7f65846ddd6883d6187b38f77721a3938f241c9e5d0ebe7beb8e19",
                            "quay.io/coreos/kube-state-metrics:v1.8.0"
                        ],
                        "sizeBytes": 33616576
                    },
                    {
                        "names": [
                            "squareup/ghostunnel@sha256:80674e1ec91cae428ca0d92d2fe7f23e8c76b1d60c32d6ab4c8c5605609a7b1c",
                            "squareup/ghostunnel:v1.4.1"
                        ],
                        "sizeBytes": 27416604
                    },
                    {
                        "names": [
                            "quay.io/prometheus/node-exporter@sha256:a2f29256e53cc3e0b64d7a472512600b2e9410347d53cdc85b49f659c17e02ee",
                            "quay.io/prometheus/node-exporter:v0.18.1"
                        ],
                        "sizeBytes": 22933477
                    },
                    {
                        "names": [
                            "k8s.gcr.io/defaultbackend-amd64@sha256:4dc5e07c8ca4e23bddb3153737d7b8c556e5fb2f29c4558b7cd6e6df99c512c7",
                            "k8s.gcr.io/defaultbackend-amd64:1.5"
                        ],
                        "sizeBytes": 5132544
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause-amd64@sha256:bea77c323c47f7b573355516acf927691182d1333333d1f41b7544012fab7adf",
                            "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause-amd64:3.1"
                        ],
                        "sizeBytes": 742472
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/events",
        "resourceVersion": "263227"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/replicationcontrollers",
        "resourceVersion": "263227"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/services",
        "resourceVersion": "263229"
    },
    "items": [
        {
            "metadata": {
                "name": "dns-external-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/dns-external-dns",
                "uid": "71f03b26-1b41-11ea-8a75-0211540fed66",
                "resourceVersion": "188960",
                "creationTimestamp": "2019-12-10T11:37:28Z",
                "labels": {
                    "app.kubernetes.io/instance": "dns",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "external-dns",
                    "helm.sh/chart": "external-dns-2.11.0"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "port": 7979,
                        "targetPort": "http"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "dns",
                    "app.kubernetes.io/name": "external-dns"
                },
                "clusterIP": "172.20.220.66",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "external-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/external-dns",
                "uid": "5136acc6-1b4a-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "200822",
                "creationTimestamp": "2019-12-10T12:40:59Z",
                "labels": {
                    "app.kubernetes.io/instance": "external-dns",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "external-dns",
                    "helm.sh/chart": "external-dns-2.11.0"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "port": 7979,
                        "targetPort": "http"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "external-dns",
                    "app.kubernetes.io/name": "external-dns"
                },
                "clusterIP": "172.20.138.201",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                "uid": "feb18454-1ab6-11ea-8a75-0211540fed66",
                "resourceVersion": "137",
                "creationTimestamp": "2019-12-09T19:06:24Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-dns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"eks.amazonaws.com/component\":\"kube-dns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"172.20.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "172.20.0.10",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-operator-coredns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-operator-coredns",
                "uid": "1f5d56dd-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "1700",
                "creationTimestamp": "2019-12-09T19:14:29Z",
                "labels": {
                    "app": "prometheus-operator-coredns",
                    "chart": "prometheus-operator-8.2.4",
                    "heritage": "Tiller",
                    "jobLabel": "coredns",
                    "release": "prometheus-operator"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-operator-kube-controller-manager",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-operator-kube-controller-manager",
                "uid": "1f5d602e-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "1701",
                "creationTimestamp": "2019-12-09T19:14:29Z",
                "labels": {
                    "app": "prometheus-operator-kube-controller-manager",
                    "chart": "prometheus-operator-8.2.4",
                    "heritage": "Tiller",
                    "jobLabel": "kube-controller-manager",
                    "release": "prometheus-operator"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 10252,
                        "targetPort": 10252
                    }
                ],
                "selector": {
                    "component": "kube-controller-manager"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-operator-kube-etcd",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-operator-kube-etcd",
                "uid": "1f5d576d-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "1699",
                "creationTimestamp": "2019-12-09T19:14:29Z",
                "labels": {
                    "app": "prometheus-operator-kube-etcd",
                    "chart": "prometheus-operator-8.2.4",
                    "heritage": "Tiller",
                    "jobLabel": "kube-etcd",
                    "release": "prometheus-operator"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 2379,
                        "targetPort": 2379
                    }
                ],
                "selector": {
                    "component": "etcd"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-operator-kube-proxy",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-operator-kube-proxy",
                "uid": "1f5d62ad-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "1702",
                "creationTimestamp": "2019-12-09T19:14:29Z",
                "labels": {
                    "app": "prometheus-operator-kube-proxy",
                    "chart": "prometheus-operator-8.2.4",
                    "heritage": "Tiller",
                    "jobLabel": "kube-proxy",
                    "release": "prometheus-operator"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 10249,
                        "targetPort": 10249
                    }
                ],
                "selector": {
                    "k8s-app": "kube-proxy"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-operator-kube-scheduler",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-operator-kube-scheduler",
                "uid": "1f5d6898-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "1703",
                "creationTimestamp": "2019-12-09T19:14:29Z",
                "labels": {
                    "app": "prometheus-operator-kube-scheduler",
                    "chart": "prometheus-operator-8.2.4",
                    "heritage": "Tiller",
                    "jobLabel": "kube-scheduler",
                    "release": "prometheus-operator"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 10251,
                        "targetPort": 10251
                    }
                ],
                "selector": {
                    "component": "kube-scheduler"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-operator-kubelet",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-operator-kubelet",
                "uid": "2a8d554b-1ab8-11ea-8a75-0211540fed66",
                "resourceVersion": "1970",
                "creationTimestamp": "2019-12-09T19:14:47Z",
                "labels": {
                    "k8s-app": "kubelet"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https-metrics",
                        "protocol": "TCP",
                        "port": 10250,
                        "targetPort": 10250
                    }
                ],
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "sealed-secrets",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/sealed-secrets",
                "uid": "07e94312-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "1370",
                "creationTimestamp": "2019-12-09T19:13:49Z",
                "labels": {
                    "app.kubernetes.io/instance": "sealed-secrets",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "sealed-secrets",
                    "app.kubernetes.io/version": "0.8.1",
                    "helm.sh/chart": "sealed-secrets-1.4.0"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "sealed-secrets"
                },
                "clusterIP": "172.20.176.113",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "state-kube-state-metrics",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/state-kube-state-metrics",
                "uid": "bdff1658-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "2724",
                "creationTimestamp": "2019-12-09T19:18:55Z",
                "labels": {
                    "app.kubernetes.io/instance": "state",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "kube-state-metrics",
                    "helm.sh/chart": "kube-state-metrics-2.4.1"
                },
                "annotations": {
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "state",
                    "app.kubernetes.io/name": "kube-state-metrics"
                },
                "clusterIP": "172.20.52.45",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "tiller-deploy",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/tiller-deploy",
                "uid": "ffeea1f5-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "1180",
                "creationTimestamp": "2019-12-09T19:13:36Z",
                "labels": {
                    "app": "helm",
                    "name": "tiller"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "tiller",
                        "protocol": "TCP",
                        "port": 44134,
                        "targetPort": "tiller"
                    }
                ],
                "selector": {
                    "app": "helm",
                    "name": "tiller"
                },
                "clusterIP": "172.20.92.87",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets",
        "resourceVersion": "263229"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/aws-node",
                "uid": "fea26767-1ab6-11ea-8a75-0211540fed66",
                "resourceVersion": "852",
                "generation": 1,
                "creationTimestamp": "2019-12-09T19:06:24Z",
                "labels": {
                    "k8s-app": "aws-node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"aws-node\"},\"name\":\"aws-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"aws-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"aws-node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\"]},{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]}]}]}}},\"containers\":[{\"env\":[{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\",\"value\":\"DEBUG\"},{\"name\":\"MY_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3\",\"imagePullPolicy\":\"Always\",\"name\":\"aws-node\",\"ports\":[{\"containerPort\":61678,\"name\":\"metrics\"}],\"resources\":{\"requests\":{\"cpu\":\"10m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"},{\"mountPath\":\"/host/var/log\",\"name\":\"log-dir\"},{\"mountPath\":\"/var/run/docker.sock\",\"name\":\"dockersock\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aws-node\",\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/etc/cni/net.d\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"log-dir\"},{\"hostPath\":{\"path\":\"/var/run/docker.sock\"},\"name\":\"dockersock\"}]}},\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "aws-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "aws-node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-bin-dir",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-net-dir",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "log-dir",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "dockersock",
                                "hostPath": {
                                    "path": "/var/run/docker.sock",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "aws-node",
                                "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "hostPort": 61678,
                                        "containerPort": 61678,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "MY_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    },
                                    {
                                        "name": "log-dir",
                                        "mountPath": "/host/var/log"
                                    },
                                    {
                                        "name": "dockersock",
                                        "mountPath": "/var/run/docker.sock"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "aws-node",
                        "serviceAccount": "aws-node",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                },
                                                {
                                                    "key": "eks.amazonaws.com/compute-type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "fargate"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 4,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 4,
                "numberReady": 4,
                "observedGeneration": 1,
                "updatedNumberScheduled": 4,
                "numberAvailable": 4
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/kube-proxy",
                "uid": "fec23d94-1ab6-11ea-8a75-0211540fed66",
                "resourceVersion": "842",
                "generation": 1,
                "creationTimestamp": "2019-12-09T19:06:24Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-proxy",
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-proxy\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kube-proxy\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\"]},{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]}]}]}}},\"containers\":[{\"command\":[\"kube-proxy\",\"--v=2\",\"--config=/var/lib/kube-proxy-config/config\"],\"image\":\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/log\",\"name\":\"varlog\",\"readOnly\":false},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/var/lib/kube-proxy/\",\"name\":\"kubeconfig\"},{\"mountPath\":\"/var/lib/kube-proxy-config/\",\"name\":\"config\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"configMap\":{\"name\":\"kube-proxy\"},\"name\":\"kubeconfig\"},{\"configMap\":{\"name\":\"kube-proxy-config\"},\"name\":\"config\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"10%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "varlog",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "kubeconfig",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config",
                                "configMap": {
                                    "name": "kube-proxy-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                                "command": [
                                    "kube-proxy",
                                    "--v=2",
                                    "--config=/var/lib/kube-proxy-config/config"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "varlog",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "kubeconfig",
                                        "mountPath": "/var/lib/kube-proxy/"
                                    },
                                    {
                                        "name": "config",
                                        "mountPath": "/var/lib/kube-proxy-config/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                },
                                                {
                                                    "key": "eks.amazonaws.com/compute-type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "fargate"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "10%"
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 4,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 4,
                "numberReady": 4,
                "observedGeneration": 1,
                "updatedNumberScheduled": 4,
                "numberAvailable": 4
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments",
        "resourceVersion": "263229"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/coredns",
                "uid": "feaedbf3-1ab6-11ea-8a75-0211540fed66",
                "resourceVersion": "915",
                "generation": 1,
                "creationTimestamp": "2019-12-09T19:06:24Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"eks.amazonaws.com/compute-type\":\"ec2\"},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.3.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns"
                        },
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.3.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-12-09T19:11:26Z",
                        "lastTransitionTime": "2019-12-09T19:11:26Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2019-12-09T19:11:28Z",
                        "lastTransitionTime": "2019-12-09T19:06:31Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-5b9879fcff\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "external-dns",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/external-dns",
                "uid": "513765cc-1b4a-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "203187",
                "generation": 1,
                "creationTimestamp": "2019-12-10T12:40:59Z",
                "labels": {
                    "app.kubernetes.io/instance": "external-dns",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "external-dns",
                    "helm.sh/chart": "external-dns-2.11.0"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "external-dns",
                        "app.kubernetes.io/name": "external-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "Tiller",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.11.0"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "external-dns",
                                "image": "docker.io/bitnami/external-dns:0.5.17-debian-9-r50",
                                "args": [
                                    "--log-level=info",
                                    "--domain-filter=test.hydrosphere.io",
                                    "--policy=upsert-only",
                                    "--provider=aws",
                                    "--registry=txt",
                                    "--interval=1m",
                                    "--source=ingress",
                                    "--source=service",
                                    "--aws-batch-change-size=1000"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 7979,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AWS_DEFAULT_REGION",
                                        "value": "us-west-2"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "external-dns",
                        "serviceAccount": "external-dns",
                        "securityContext": {
                            "runAsUser": 1001,
                            "fsGroup": 1001
                        },
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2019-12-10T12:41:06Z",
                        "lastTransitionTime": "2019-12-10T12:40:59Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"external-dns-7f64f578c4\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-12-10T12:53:33Z",
                        "lastTransitionTime": "2019-12-10T12:53:33Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "sealed-secrets",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/sealed-secrets",
                "uid": "07e9f1d8-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "1501",
                "generation": 1,
                "creationTimestamp": "2019-12-09T19:13:49Z",
                "labels": {
                    "app.kubernetes.io/instance": "sealed-secrets",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "sealed-secrets",
                    "app.kubernetes.io/version": "0.8.1",
                    "helm.sh/chart": "sealed-secrets-1.4.0"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "sealed-secrets",
                        "app.kubernetes.io/name": "sealed-secrets"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "sealed-secrets",
                            "app.kubernetes.io/name": "sealed-secrets"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "sealed-secrets",
                                "image": "quay.io/bitnami/sealed-secrets-controller:v0.8.3",
                                "command": [
                                    "controller"
                                ],
                                "args": [
                                    "--key-prefix",
                                    "sealed-secrets-key"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1001,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "sealed-secrets",
                        "serviceAccount": "sealed-secrets",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-12-09T19:13:58Z",
                        "lastTransitionTime": "2019-12-09T19:13:58Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2019-12-09T19:13:58Z",
                        "lastTransitionTime": "2019-12-09T19:13:49Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"sealed-secrets-556664b9fd\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "state-kube-state-metrics",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/state-kube-state-metrics",
                "uid": "be001a9e-1ab8-11ea-8891-0a5d58d92a4c",
                "resourceVersion": "2903",
                "generation": 1,
                "creationTimestamp": "2019-12-09T19:18:55Z",
                "labels": {
                    "app.kubernetes.io/instance": "state",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "kube-state-metrics",
                    "helm.sh/chart": "kube-state-metrics-2.4.1"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kube-state-metrics"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "state",
                            "app.kubernetes.io/name": "kube-state-metrics"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "kube-state-metrics",
                                "image": "quay.io/coreos/kube-state-metrics:v1.8.0",
                                "args": [
                                    "--collectors=certificatesigningrequests",
                                    "--collectors=configmaps",
                                    "--collectors=cronjobs",
                                    "--collectors=daemonsets",
                                    "--collectors=deployments",
                                    "--collectors=endpoints",
                                    "--collectors=horizontalpodautoscalers",
                                    "--collectors=ingresses",
                                    "--collectors=jobs",
                                    "--collectors=limitranges",
                                    "--collectors=namespaces",
                                    "--collectors=nodes",
                                    "--collectors=persistentvolumeclaims",
                                    "--collectors=persistentvolumes",
                                    "--collectors=poddisruptionbudgets",
                                    "--collectors=pods",
                                    "--collectors=replicasets",
                                    "--collectors=replicationcontrollers",
                                    "--collectors=resourcequotas",
                                    "--collectors=secrets",
                                    "--collectors=services",
                                    "--collectors=statefulsets",
                                    "--collectors=storageclasses"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "state-kube-state-metrics",
                        "serviceAccount": "state-kube-state-metrics",
                        "securityContext": {
                            "runAsUser": 65534,
                            "fsGroup": 65534
                        },
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-12-09T19:19:09Z",
                        "lastTransitionTime": "2019-12-09T19:19:09Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2019-12-09T19:19:09Z",
                        "lastTransitionTime": "2019-12-09T19:18:55Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"state-kube-state-metrics-7c76fb9f9b\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "tiller-deploy",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/tiller-deploy",
                "uid": "ffc871cf-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "186265",
                "generation": 2,
                "creationTimestamp": "2019-12-09T19:13:36Z",
                "labels": {
                    "app": "helm",
                    "name": "tiller"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "2"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "helm",
                        "name": "tiller"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "helm",
                            "name": "tiller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "tiller",
                                "image": "gcr.io/kubernetes-helm/tiller:v2.16.1",
                                "ports": [
                                    {
                                        "name": "tiller",
                                        "containerPort": 44134,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 44135,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "TILLER_NAMESPACE",
                                        "value": "kube-system"
                                    },
                                    {
                                        "name": "TILLER_HISTORY_MAX",
                                        "value": "0"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/liveness",
                                        "port": 44135,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readiness",
                                        "port": 44135,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "tiller",
                        "serviceAccount": "tiller",
                        "automountServiceAccountToken": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-12-09T19:13:41Z",
                        "lastTransitionTime": "2019-12-09T19:13:41Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2019-12-10T11:23:53Z",
                        "lastTransitionTime": "2019-12-09T19:13:36Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"tiller-deploy-586965d498\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets",
        "resourceVersion": "263231"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5b9879fcff",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-5b9879fcff",
                "uid": "02d99e8c-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "913",
                "generation": 1,
                "creationTimestamp": "2019-12-09T19:06:31Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5b9879fcff"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "feaedbf3-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "5b9879fcff"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "5b9879fcff"
                        },
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.3.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "external-dns-7f64f578c4",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/external-dns-7f64f578c4",
                "uid": "51383e00-1b4a-11ea-8a75-0211540fed66",
                "resourceVersion": "203185",
                "generation": 1,
                "creationTimestamp": "2019-12-10T12:40:59Z",
                "labels": {
                    "app.kubernetes.io/instance": "external-dns",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "external-dns",
                    "helm.sh/chart": "external-dns-2.11.0",
                    "pod-template-hash": "7f64f578c4"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "external-dns",
                        "uid": "513765cc-1b4a-11ea-8891-0a5d58d92a4c",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "external-dns",
                        "app.kubernetes.io/name": "external-dns",
                        "pod-template-hash": "7f64f578c4"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "Tiller",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.11.0",
                            "pod-template-hash": "7f64f578c4"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "external-dns",
                                "image": "docker.io/bitnami/external-dns:0.5.17-debian-9-r50",
                                "args": [
                                    "--log-level=info",
                                    "--domain-filter=test.hydrosphere.io",
                                    "--policy=upsert-only",
                                    "--provider=aws",
                                    "--registry=txt",
                                    "--interval=1m",
                                    "--source=ingress",
                                    "--source=service",
                                    "--aws-batch-change-size=1000"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 7979,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AWS_DEFAULT_REGION",
                                        "value": "us-west-2"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "external-dns",
                        "serviceAccount": "external-dns",
                        "securityContext": {
                            "runAsUser": 1001,
                            "fsGroup": 1001
                        },
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "sealed-secrets-556664b9fd",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/sealed-secrets-556664b9fd",
                "uid": "07eac979-1ab8-11ea-8a75-0211540fed66",
                "resourceVersion": "1499",
                "generation": 1,
                "creationTimestamp": "2019-12-09T19:13:49Z",
                "labels": {
                    "app.kubernetes.io/instance": "sealed-secrets",
                    "app.kubernetes.io/name": "sealed-secrets",
                    "pod-template-hash": "556664b9fd"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "sealed-secrets",
                        "uid": "07e9f1d8-1ab8-11ea-8891-0a5d58d92a4c",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "sealed-secrets",
                        "app.kubernetes.io/name": "sealed-secrets",
                        "pod-template-hash": "556664b9fd"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "sealed-secrets",
                            "app.kubernetes.io/name": "sealed-secrets",
                            "pod-template-hash": "556664b9fd"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "sealed-secrets",
                                "image": "quay.io/bitnami/sealed-secrets-controller:v0.8.3",
                                "command": [
                                    "controller"
                                ],
                                "args": [
                                    "--key-prefix",
                                    "sealed-secrets-key"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1001,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "sealed-secrets",
                        "serviceAccount": "sealed-secrets",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "state-kube-state-metrics-7c76fb9f9b",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/state-kube-state-metrics-7c76fb9f9b",
                "uid": "be00d160-1ab8-11ea-8a75-0211540fed66",
                "resourceVersion": "2900",
                "generation": 1,
                "creationTimestamp": "2019-12-09T19:18:55Z",
                "labels": {
                    "app.kubernetes.io/instance": "state",
                    "app.kubernetes.io/name": "kube-state-metrics",
                    "pod-template-hash": "7c76fb9f9b"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "state-kube-state-metrics",
                        "uid": "be001a9e-1ab8-11ea-8891-0a5d58d92a4c",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kube-state-metrics",
                        "pod-template-hash": "7c76fb9f9b"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "state",
                            "app.kubernetes.io/name": "kube-state-metrics",
                            "pod-template-hash": "7c76fb9f9b"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "kube-state-metrics",
                                "image": "quay.io/coreos/kube-state-metrics:v1.8.0",
                                "args": [
                                    "--collectors=certificatesigningrequests",
                                    "--collectors=configmaps",
                                    "--collectors=cronjobs",
                                    "--collectors=daemonsets",
                                    "--collectors=deployments",
                                    "--collectors=endpoints",
                                    "--collectors=horizontalpodautoscalers",
                                    "--collectors=ingresses",
                                    "--collectors=jobs",
                                    "--collectors=limitranges",
                                    "--collectors=namespaces",
                                    "--collectors=nodes",
                                    "--collectors=persistentvolumeclaims",
                                    "--collectors=persistentvolumes",
                                    "--collectors=poddisruptionbudgets",
                                    "--collectors=pods",
                                    "--collectors=replicasets",
                                    "--collectors=replicationcontrollers",
                                    "--collectors=resourcequotas",
                                    "--collectors=secrets",
                                    "--collectors=services",
                                    "--collectors=statefulsets",
                                    "--collectors=storageclasses"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "state-kube-state-metrics",
                        "serviceAccount": "state-kube-state-metrics",
                        "securityContext": {
                            "runAsUser": 65534,
                            "fsGroup": 65534
                        },
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "tiller-deploy-586965d498",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/tiller-deploy-586965d498",
                "uid": "85430801-1b3f-11ea-8a75-0211540fed66",
                "resourceVersion": "186255",
                "generation": 1,
                "creationTimestamp": "2019-12-10T11:23:42Z",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "586965d498"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "2"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "tiller-deploy",
                        "uid": "ffc871cf-1ab7-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "helm",
                        "name": "tiller",
                        "pod-template-hash": "586965d498"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "helm",
                            "name": "tiller",
                            "pod-template-hash": "586965d498"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "tiller",
                                "image": "gcr.io/kubernetes-helm/tiller:v2.16.1",
                                "ports": [
                                    {
                                        "name": "tiller",
                                        "containerPort": 44134,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 44135,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "TILLER_NAMESPACE",
                                        "value": "kube-system"
                                    },
                                    {
                                        "name": "TILLER_HISTORY_MAX",
                                        "value": "0"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/liveness",
                                        "port": 44135,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readiness",
                                        "port": 44135,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "tiller",
                        "serviceAccount": "tiller",
                        "automountServiceAccountToken": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "tiller-deploy-597765d7c",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/tiller-deploy-597765d7c",
                "uid": "ffc9984f-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "186264",
                "generation": 2,
                "creationTimestamp": "2019-12-09T19:13:36Z",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "597765d7c"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "tiller-deploy",
                        "uid": "ffc871cf-1ab7-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "app": "helm",
                        "name": "tiller",
                        "pod-template-hash": "597765d7c"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "helm",
                            "name": "tiller",
                            "pod-template-hash": "597765d7c"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "tiller",
                                "image": "gcr.io/kubernetes-helm/tiller:v2.15.1",
                                "ports": [
                                    {
                                        "name": "tiller",
                                        "containerPort": 44134,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 44135,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "TILLER_NAMESPACE",
                                        "value": "kube-system"
                                    },
                                    {
                                        "name": "TILLER_HISTORY_MAX",
                                        "value": "0"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/liveness",
                                        "port": 44135,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readiness",
                                        "port": 44135,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "tiller",
                        "serviceAccount": "tiller",
                        "automountServiceAccountToken": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 0,
                "observedGeneration": 2
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/pods",
        "resourceVersion": "263231"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node-5lv42",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-5lv42",
                "uid": "a4e36712-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "849",
                "creationTimestamp": "2019-12-09T19:11:03Z",
                "labels": {
                    "controller-revision-hash": "584f9f968c",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "fea26767-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockersock",
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "aws-node-token-77tb9",
                        "secret": {
                            "secretName": "aws-node-token-77tb9",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log"
                            },
                            {
                                "name": "dockersock",
                                "mountPath": "/var/run/docker.sock"
                            },
                            {
                                "name": "aws-node-token-77tb9",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-10-10-202-30.us-west-2.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-10-10-202-30.us-west-2.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:12Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:12Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:03Z"
                    }
                ],
                "hostIP": "10.10.202.30",
                "podIP": "10.10.202.30",
                "startTime": "2019-12-09T19:11:03Z",
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:11Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                        "containerID": "docker://066458e8270829e73e55a472482be4409cb4ba1ec1440adec99496f0fc1cffef"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "aws-node-cxx8t",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-cxx8t",
                "uid": "a2a463c3-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "820",
                "creationTimestamp": "2019-12-09T19:10:59Z",
                "labels": {
                    "controller-revision-hash": "584f9f968c",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "fea26767-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockersock",
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "aws-node-token-77tb9",
                        "secret": {
                            "secretName": "aws-node-token-77tb9",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log"
                            },
                            {
                                "name": "dockersock",
                                "mountPath": "/var/run/docker.sock"
                            },
                            {
                                "name": "aws-node-token-77tb9",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-10-10-200-181.us-west-2.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-10-10-200-181.us-west-2.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:10:59Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:08Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:08Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:10:59Z"
                    }
                ],
                "hostIP": "10.10.200.181",
                "podIP": "10.10.200.181",
                "startTime": "2019-12-09T19:10:59Z",
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:07Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                        "containerID": "docker://8aebc6a86e824c74b5250eca95833377901c3cd95f9064327a8e8b12384949a7"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "aws-node-pqx7v",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-pqx7v",
                "uid": "a12de33c-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "806",
                "creationTimestamp": "2019-12-09T19:10:57Z",
                "labels": {
                    "controller-revision-hash": "584f9f968c",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "fea26767-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockersock",
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "aws-node-token-77tb9",
                        "secret": {
                            "secretName": "aws-node-token-77tb9",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log"
                            },
                            {
                                "name": "dockersock",
                                "mountPath": "/var/run/docker.sock"
                            },
                            {
                                "name": "aws-node-token-77tb9",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-10-10-201-128.us-west-2.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-10-10-201-128.us-west-2.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:10:57Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:06Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:06Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:10:57Z"
                    }
                ],
                "hostIP": "10.10.201.128",
                "podIP": "10.10.201.128",
                "startTime": "2019-12-09T19:10:57Z",
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:06Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                        "containerID": "docker://3d46fec3c23f0e026d9309a5bcca1aaa94368cfd7131e4ed93afea0add49f80a"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "aws-node-r5qgj",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-r5qgj",
                "uid": "a50b9be1-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "851",
                "creationTimestamp": "2019-12-09T19:11:03Z",
                "labels": {
                    "controller-revision-hash": "584f9f968c",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "fea26767-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockersock",
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "aws-node-token-77tb9",
                        "secret": {
                            "secretName": "aws-node-token-77tb9",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log"
                            },
                            {
                                "name": "dockersock",
                                "mountPath": "/var/run/docker.sock"
                            },
                            {
                                "name": "aws-node-token-77tb9",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-10-10-201-127.us-west-2.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-10-10-201-127.us-west-2.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:12Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:12Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:03Z"
                    }
                ],
                "hostIP": "10.10.201.127",
                "podIP": "10.10.201.127",
                "startTime": "2019-12-09T19:11:03Z",
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:12Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                        "containerID": "docker://fab471a4e826484e31df4985ca0f58648d588986df57938f40ab2e23099984d5"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-5b9879fcff-2kwxp",
                "generateName": "coredns-5b9879fcff-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-5b9879fcff-2kwxp",
                "uid": "02ddceb2-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "905",
                "creationTimestamp": "2019-12-09T19:06:31Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5b9879fcff"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5b9879fcff",
                        "uid": "02d99e8c-1ab7-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-8crml",
                        "secret": {
                            "secretName": "coredns-token-8crml",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.3.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "coredns-token-8crml",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-10-10-201-128.us-west-2.compute.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:19Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:26Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:26Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:19Z"
                    }
                ],
                "hostIP": "10.10.201.128",
                "podIP": "10.10.201.201",
                "startTime": "2019-12-09T19:11:19Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:22Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.3.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns@sha256:c85954b828a5627b9f3c4540893ab9d8a4be5f8da7513882ad122e08f5c2e60a",
                        "containerID": "docker://afd725023244a5846513167111dceb76875df761bed6156e3d0f4c1cc032c1c5"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-5b9879fcff-rq5c8",
                "generateName": "coredns-5b9879fcff-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-5b9879fcff-rq5c8",
                "uid": "02dbf894-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "912",
                "creationTimestamp": "2019-12-09T19:06:31Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5b9879fcff"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5b9879fcff",
                        "uid": "02d99e8c-1ab7-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-8crml",
                        "secret": {
                            "secretName": "coredns-token-8crml",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.3.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "coredns-token-8crml",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-10-10-201-128.us-west-2.compute.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:19Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:27Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:27Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:19Z"
                    }
                ],
                "hostIP": "10.10.201.128",
                "podIP": "10.10.201.15",
                "startTime": "2019-12-09T19:11:19Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:22Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.3.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns@sha256:c85954b828a5627b9f3c4540893ab9d8a4be5f8da7513882ad122e08f5c2e60a",
                        "containerID": "docker://deb90fed7d200ac070897e346a2cf6301641fd5a87d86dd7e728754ddba605ad"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "external-dns-7f64f578c4-tbjfs",
                "generateName": "external-dns-7f64f578c4-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/external-dns-7f64f578c4-tbjfs",
                "uid": "0a544818-1b4c-11ea-8a75-0211540fed66",
                "resourceVersion": "203184",
                "creationTimestamp": "2019-12-10T12:53:19Z",
                "labels": {
                    "app.kubernetes.io/instance": "external-dns",
                    "app.kubernetes.io/managed-by": "Tiller",
                    "app.kubernetes.io/name": "external-dns",
                    "helm.sh/chart": "external-dns-2.11.0",
                    "pod-template-hash": "7f64f578c4"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "external-dns-7f64f578c4",
                        "uid": "51383e00-1b4a-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "external-dns-token-px2fm",
                        "secret": {
                            "secretName": "external-dns-token-px2fm",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "external-dns",
                        "image": "docker.io/bitnami/external-dns:0.5.17-debian-9-r50",
                        "args": [
                            "--log-level=info",
                            "--domain-filter=test.hydrosphere.io",
                            "--policy=upsert-only",
                            "--provider=aws",
                            "--registry=txt",
                            "--interval=1m",
                            "--source=ingress",
                            "--source=service",
                            "--aws-batch-change-size=1000"
                        ],
                        "ports": [
                            {
                                "name": "http",
                                "containerPort": 7979,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "AWS_DEFAULT_REGION",
                                "value": "us-west-2"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "external-dns-token-px2fm",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "http",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 2
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "http",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 6
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "external-dns",
                "serviceAccount": "external-dns",
                "nodeName": "ip-10-10-201-127.us-west-2.compute.internal",
                "securityContext": {
                    "runAsUser": 1001,
                    "fsGroup": 1001
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-10T12:53:19Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-10T12:53:33Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-10T12:53:33Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-10T12:53:19Z"
                    }
                ],
                "hostIP": "10.10.201.127",
                "podIP": "10.10.201.194",
                "startTime": "2019-12-10T12:53:19Z",
                "containerStatuses": [
                    {
                        "name": "external-dns",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-10T12:53:20Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "bitnami/external-dns:0.5.17-debian-9-r50",
                        "imageID": "docker-pullable://bitnami/external-dns@sha256:049c03a37c551c7e6b9c4c2702056c595b34ed516fcb3a4b1b0e57da720b5c23",
                        "containerID": "docker://8c0da0026fa40c6b01d4d513fb41751fc79df734298fa3d036f04167c8b98656"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-9v59b",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-9v59b",
                "uid": "a4e38e70-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "833",
                "creationTimestamp": "2019-12-09T19:11:03Z",
                "labels": {
                    "controller-revision-hash": "84c79c8df",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "fec23d94-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-proxy-token-7q4xv",
                        "secret": {
                            "secretName": "kube-proxy-token-7q4xv",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-proxy-token-7q4xv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-10-10-202-30.us-west-2.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-10-10-202-30.us-west-2.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:10Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:10Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:03Z"
                    }
                ],
                "hostIP": "10.10.202.30",
                "podIP": "10.10.202.30",
                "startTime": "2019-12-09T19:11:03Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:10Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                        "containerID": "docker://e719b7762723d0eadb9e459c5ded2b3f31945ffbaa4b5e4913e16bd890ee373e"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-j6bpg",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-j6bpg",
                "uid": "a50bacca-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "841",
                "creationTimestamp": "2019-12-09T19:11:03Z",
                "labels": {
                    "controller-revision-hash": "84c79c8df",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "fec23d94-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-proxy-token-7q4xv",
                        "secret": {
                            "secretName": "kube-proxy-token-7q4xv",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-proxy-token-7q4xv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-10-10-201-127.us-west-2.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-10-10-201-127.us-west-2.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:11Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:11Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:03Z"
                    }
                ],
                "hostIP": "10.10.201.127",
                "podIP": "10.10.201.127",
                "startTime": "2019-12-09T19:11:03Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:10Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                        "containerID": "docker://80b53618be7889ff5ac3a889c388ae7f34aec4d6d9508a1af45cba09db12c23e"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-k8txn",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-k8txn",
                "uid": "a12ddece-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "789",
                "creationTimestamp": "2019-12-09T19:10:57Z",
                "labels": {
                    "controller-revision-hash": "84c79c8df",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "fec23d94-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-proxy-token-7q4xv",
                        "secret": {
                            "secretName": "kube-proxy-token-7q4xv",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-proxy-token-7q4xv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-10-10-201-128.us-west-2.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-10-10-201-128.us-west-2.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:10:57Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:04Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:04Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:10:57Z"
                    }
                ],
                "hostIP": "10.10.201.128",
                "podIP": "10.10.201.128",
                "startTime": "2019-12-09T19:10:57Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:04Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                        "containerID": "docker://30825abf02a2dfe1ce825408cc33c2ec5662dbc179a9c1d3fa1ecb2e30df6cdc"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-nhfck",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-nhfck",
                "uid": "a2a463e5-1ab7-11ea-8a75-0211540fed66",
                "resourceVersion": "814",
                "creationTimestamp": "2019-12-09T19:10:59Z",
                "labels": {
                    "controller-revision-hash": "84c79c8df",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "fec23d94-1ab6-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-proxy-token-7q4xv",
                        "secret": {
                            "secretName": "kube-proxy-token-7q4xv",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-proxy-token-7q4xv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-10-10-200-181.us-west-2.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-10-10-200-181.us-west-2.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:10:59Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:07Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:11:07Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:10:59Z"
                    }
                ],
                "hostIP": "10.10.200.181",
                "podIP": "10.10.200.181",
                "startTime": "2019-12-09T19:10:59Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:11:06Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                        "containerID": "docker://8fc00092a464a78af928ac023b90a4527470a0ff8b16d3d3b13f271868e139e8"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "sealed-secrets-556664b9fd-nh88k",
                "generateName": "sealed-secrets-556664b9fd-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/sealed-secrets-556664b9fd-nh88k",
                "uid": "07eb810b-1ab8-11ea-8a75-0211540fed66",
                "resourceVersion": "1498",
                "creationTimestamp": "2019-12-09T19:13:49Z",
                "labels": {
                    "app.kubernetes.io/instance": "sealed-secrets",
                    "app.kubernetes.io/name": "sealed-secrets",
                    "pod-template-hash": "556664b9fd"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "sealed-secrets-556664b9fd",
                        "uid": "07eac979-1ab8-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "sealed-secrets-token-8k4ck",
                        "secret": {
                            "secretName": "sealed-secrets-token-8k4ck",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "sealed-secrets",
                        "image": "quay.io/bitnami/sealed-secrets-controller:v0.8.3",
                        "command": [
                            "controller"
                        ],
                        "args": [
                            "--key-prefix",
                            "sealed-secrets-key"
                        ],
                        "ports": [
                            {
                                "name": "http",
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "sealed-secrets-token-8k4ck",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "runAsUser": 1001,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "sealed-secrets",
                "serviceAccount": "sealed-secrets",
                "nodeName": "ip-10-10-202-30.us-west-2.compute.internal",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:13:49Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:13:58Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:13:58Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:13:49Z"
                    }
                ],
                "hostIP": "10.10.202.30",
                "podIP": "10.10.202.57",
                "startTime": "2019-12-09T19:13:49Z",
                "containerStatuses": [
                    {
                        "name": "sealed-secrets",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:13:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "quay.io/bitnami/sealed-secrets-controller:v0.8.3",
                        "imageID": "docker-pullable://quay.io/bitnami/sealed-secrets-controller@sha256:229255446eba090037fd334122259c1e7f219bf13c63d2ba989705255cd383ad",
                        "containerID": "docker://c5d1c08a6f4279e9d3fc1cc76e7b7dcfddad86cbbee1b96171d7d3c5392d3d65"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "state-kube-state-metrics-7c76fb9f9b-r4kp5",
                "generateName": "state-kube-state-metrics-7c76fb9f9b-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/state-kube-state-metrics-7c76fb9f9b-r4kp5",
                "uid": "be028864-1ab8-11ea-8a75-0211540fed66",
                "resourceVersion": "2899",
                "creationTimestamp": "2019-12-09T19:18:55Z",
                "labels": {
                    "app.kubernetes.io/instance": "state",
                    "app.kubernetes.io/name": "kube-state-metrics",
                    "pod-template-hash": "7c76fb9f9b"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "state-kube-state-metrics-7c76fb9f9b",
                        "uid": "be00d160-1ab8-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "state-kube-state-metrics-token-4j2t2",
                        "secret": {
                            "secretName": "state-kube-state-metrics-token-4j2t2",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-state-metrics",
                        "image": "quay.io/coreos/kube-state-metrics:v1.8.0",
                        "args": [
                            "--collectors=certificatesigningrequests",
                            "--collectors=configmaps",
                            "--collectors=cronjobs",
                            "--collectors=daemonsets",
                            "--collectors=deployments",
                            "--collectors=endpoints",
                            "--collectors=horizontalpodautoscalers",
                            "--collectors=ingresses",
                            "--collectors=jobs",
                            "--collectors=limitranges",
                            "--collectors=namespaces",
                            "--collectors=nodes",
                            "--collectors=persistentvolumeclaims",
                            "--collectors=persistentvolumes",
                            "--collectors=poddisruptionbudgets",
                            "--collectors=pods",
                            "--collectors=replicasets",
                            "--collectors=replicationcontrollers",
                            "--collectors=resourcequotas",
                            "--collectors=secrets",
                            "--collectors=services",
                            "--collectors=statefulsets",
                            "--collectors=storageclasses"
                        ],
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "state-kube-state-metrics-token-4j2t2",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "state-kube-state-metrics",
                "serviceAccount": "state-kube-state-metrics",
                "nodeName": "ip-10-10-200-181.us-west-2.compute.internal",
                "securityContext": {
                    "runAsUser": 65534,
                    "fsGroup": 65534
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:18:55Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:19:09Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:19:09Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-09T19:18:55Z"
                    }
                ],
                "hostIP": "10.10.200.181",
                "podIP": "10.10.200.50",
                "startTime": "2019-12-09T19:18:55Z",
                "containerStatuses": [
                    {
                        "name": "kube-state-metrics",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-09T19:19:00Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "quay.io/coreos/kube-state-metrics:v1.8.0",
                        "imageID": "docker-pullable://quay.io/coreos/kube-state-metrics@sha256:f75c3e5c5c7f65846ddd6883d6187b38f77721a3938f241c9e5d0ebe7beb8e19",
                        "containerID": "docker://80bb90f3bcbdf01f924b157db801b8ffe690f62bab2f37f5c7d86ab723e0b81c"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "tiller-deploy-586965d498-5ts64",
                "generateName": "tiller-deploy-586965d498-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tiller-deploy-586965d498-5ts64",
                "uid": "8544c9c4-1b3f-11ea-8a75-0211540fed66",
                "resourceVersion": "186253",
                "creationTimestamp": "2019-12-10T11:23:42Z",
                "labels": {
                    "app": "helm",
                    "name": "tiller",
                    "pod-template-hash": "586965d498"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "tiller-deploy-586965d498",
                        "uid": "85430801-1b3f-11ea-8a75-0211540fed66",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tiller-token-fqvxp",
                        "secret": {
                            "secretName": "tiller-token-fqvxp",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "tiller",
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.1",
                        "ports": [
                            {
                                "name": "tiller",
                                "containerPort": 44134,
                                "protocol": "TCP"
                            },
                            {
                                "name": "http",
                                "containerPort": 44135,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "TILLER_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "TILLER_HISTORY_MAX",
                                "value": "0"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "tiller-token-fqvxp",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/liveness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readiness",
                                "port": 44135,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "tiller",
                "serviceAccount": "tiller",
                "automountServiceAccountToken": true,
                "nodeName": "ip-10-10-201-128.us-west-2.compute.internal",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-10T11:23:42Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-10T11:23:53Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-10T11:23:53Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-12-10T11:23:42Z"
                    }
                ],
                "hostIP": "10.10.201.128",
                "podIP": "10.10.201.158",
                "startTime": "2019-12-10T11:23:42Z",
                "containerStatuses": [
                    {
                        "name": "tiller",
                        "state": {
                            "running": {
                                "startedAt": "2019-12-10T11:23:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "gcr.io/kubernetes-helm/tiller:v2.16.1",
                        "imageID": "docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:3c70ee359d3ec305ca469395a2481b2375d569c6b4a928389ca07d829d12ec51",
                        "containerID": "docker://9937a9b110e8a9d7fbb2e868d9039d0bee8b7a17a921b1ad172635bde7f5c6ce"
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container aws-node of pod kube-system/aws-node-5lv42 ====
====== Installing AWS-CNI ======
====== Starting amazon-k8s-agent ======
==== END logs for container aws-node of pod kube-system/aws-node-5lv42 ====
==== START logs for container aws-node of pod kube-system/aws-node-cxx8t ====
====== Installing AWS-CNI ======
====== Starting amazon-k8s-agent ======
ERROR: logging before flag.Parse: E1209 19:11:37.952884       9 memcache.go:138] couldn't get current server API group list; will keep using cached value. (Get https://172.20.0.1:443/api?timeout=32s: dial tcp 172.20.0.1:443: i/o timeout)
ERROR: logging before flag.Parse: E1209 19:18:37.979858       9 memcache.go:147] couldn't get resource list for webhook.cert-manager.io/v1beta1: the server is currently unable to handle the request
==== END logs for container aws-node of pod kube-system/aws-node-cxx8t ====
==== START logs for container aws-node of pod kube-system/aws-node-pqx7v ====
====== Installing AWS-CNI ======
====== Starting amazon-k8s-agent ======
==== END logs for container aws-node of pod kube-system/aws-node-pqx7v ====
==== START logs for container aws-node of pod kube-system/aws-node-r5qgj ====
====== Installing AWS-CNI ======
====== Starting amazon-k8s-agent ======
==== END logs for container aws-node of pod kube-system/aws-node-r5qgj ====
==== START logs for container coredns of pod kube-system/coredns-5b9879fcff-2kwxp ====
.:53
2019-12-09T19:11:22.376Z [INFO] CoreDNS-1.3.1
2019-12-09T19:11:22.376Z [INFO] linux/amd64, go1.10.8, 6b56a9c9
CoreDNS-1.3.1
linux/amd64, go1.10.8, 6b56a9c9
2019-12-09T19:11:22.376Z [INFO] plugin/reload: Running configuration MD5 = 86a350d0c3832da65c10531b445c45d5
==== END logs for container coredns of pod kube-system/coredns-5b9879fcff-2kwxp ====
==== START logs for container coredns of pod kube-system/coredns-5b9879fcff-rq5c8 ====
.:53
2019-12-09T19:11:22.347Z [INFO] CoreDNS-1.3.1
2019-12-09T19:11:22.347Z [INFO] linux/amd64, go1.10.8, 6b56a9c9
CoreDNS-1.3.1
linux/amd64, go1.10.8, 6b56a9c9
2019-12-09T19:11:22.347Z [INFO] plugin/reload: Running configuration MD5 = 86a350d0c3832da65c10531b445c45d5
==== END logs for container coredns of pod kube-system/coredns-5b9879fcff-rq5c8 ====
==== START logs for container external-dns of pod kube-system/external-dns-7f64f578c4-tbjfs ====
time="2019-12-10T12:53:20Z" level=info msg="config: {Master: KubeConfig: RequestTimeout:30s IstioIngressGatewayServices:[istio-system/istio-ingressgateway] ContourLoadBalancerService:heptio-contour/contour Sources:[ingress service] Namespace: AnnotationFilter: FQDNTemplate: CombineFQDNAndAnnotation:false IgnoreHostnameAnnotation:false Compatibility: PublishInternal:false PublishHostIP:false ConnectorSourceServer:localhost:8080 Provider:aws GoogleProject: DomainFilter:[test.hydrosphere.io] ExcludeDomains:[] ZoneIDFilter:[] AlibabaCloudConfigFile:/etc/kubernetes/alibaba-cloud.json AlibabaCloudZoneType: AWSZoneType: AWSZoneTagFilter:[] AWSAssumeRole: AWSBatchChangeSize:1000 AWSBatchChangeInterval:1s AWSEvaluateTargetHealth:true AWSAPIRetries:3 AWSPreferCNAME:false AzureConfigFile:/etc/kubernetes/azure.json AzureResourceGroup: CloudflareProxied:false CloudflareZonesPerPage:50 CoreDNSPrefix:/skydns/ RcodezeroTXTEncrypt:false InfobloxGridHost: InfobloxWapiPort:443 InfobloxWapiUsername:admin InfobloxWapiPassword: InfobloxWapiVersion:2.3.1 InfobloxSSLVerify:true InfobloxView: InfobloxMaxResults:0 DynCustomerName: DynUsername: DynPassword: DynMinTTLSeconds:0 OCIConfigFile:/etc/kubernetes/oci.yaml InMemoryZones:[] PDNSServer:http://localhost:8081 PDNSAPIKey: PDNSTLSEnabled:false TLSCA: TLSClientCert: TLSClientCertKey: Policy:upsert-only Registry:txt TXTOwnerID:default TXTPrefix: Interval:1m0s Once:false DryRun:false LogFormat:text MetricsAddress::7979 LogLevel:info TXTCacheInterval:0s ExoscaleEndpoint:https://api.exoscale.ch/dns ExoscaleAPIKey: ExoscaleAPISecret: CRDSourceAPIVersion:externaldns.k8s.io/v1alpha1 CRDSourceKind:DNSEndpoint ServiceTypeFilter:[] CFAPIEndpoint: CFUsername: CFPassword: RFC2136Host: RFC2136Port:0 RFC2136Zone: RFC2136Insecure:false RFC2136TSIGKeyName: RFC2136TSIGSecret: RFC2136TSIGSecretAlg: RFC2136TAXFR:false NS1Endpoint: NS1IgnoreSSL:false TransIPAccountName: TransIPPrivateKeyFile:}"
time="2019-12-10T12:53:20Z" level=info msg="Created Kubernetes client https://172.20.0.1:443"
time="2019-12-10T12:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:53:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:53:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ee8be4ff-b516-454c-8eeb-60f4bc6f4137"
time="2019-12-10T12:53:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:54:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:54:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a91f5690-2f85-4859-853a-0ece08a996a0"
time="2019-12-10T12:54:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:55:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:55:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 364ceddd-2939-4bea-8360-0f033aaf3a92"
time="2019-12-10T12:55:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:56:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:56:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 88270a18-b7e8-4b1c-99ad-c79ec7c3bcb4"
time="2019-12-10T12:56:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:57:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:57:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: dddccc2c-f4e8-4774-aaea-b70bcab2b59d"
time="2019-12-10T12:57:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:58:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:58:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 842042bb-adb5-420a-b639-d9d87cccaf84"
time="2019-12-10T12:58:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:59:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T12:59:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9a5aa2f8-9e15-4331-9ce0-29c5454bc047"
time="2019-12-10T12:59:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:00:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:00:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e0451ff0-da4f-4037-87ea-320ee6c18f23"
time="2019-12-10T13:00:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:01:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:01:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8b415cba-cab4-4bd1-bfa5-a4d645d895f4"
time="2019-12-10T13:01:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:02:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:02:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 0d209644-b099-420d-a57c-90d48f9b2efd"
time="2019-12-10T13:02:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:03:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:03:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ef42090d-2977-495c-aa80-c1734732c3db"
time="2019-12-10T13:03:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:04:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:04:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8e6f646d-9c90-4f2a-b7ac-c3eb9c89bc37"
time="2019-12-10T13:04:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:05:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:05:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1d68af57-ae7a-49c5-a25c-2a5fb57333a5"
time="2019-12-10T13:05:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:06:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:06:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 53d96a4f-037a-4626-aa93-c02ab81d0c4f"
time="2019-12-10T13:06:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:07:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:07:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 454de7e5-207a-46d3-98ee-df0375212128"
time="2019-12-10T13:07:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:08:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:08:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ba9c4769-e258-4586-be35-e7f3428452ff"
time="2019-12-10T13:08:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:09:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:09:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 99ae9e9b-9e0e-4602-91ca-6f34d48ec318"
time="2019-12-10T13:09:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:10:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:10:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:10:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:10:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a8206760-ede1-4ad3-8656-1e9ef4fb8f1b"
time="2019-12-10T13:10:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:11:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:11:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5e0db47d-343d-4c57-b91a-a355f718ee4f"
time="2019-12-10T13:11:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:12:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:12:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 2d03b527-1ee8-4a59-ae5c-ef28a69e28a1"
time="2019-12-10T13:12:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:13:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:13:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ec2832f0-2089-4dda-9a6c-48c5e05e4e1d"
time="2019-12-10T13:13:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:14:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:14:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 7684de51-90ad-4592-8869-ab64a2ce9cf6"
time="2019-12-10T13:14:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:15:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:15:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 64ae98c5-b2f6-43f7-8798-d7a1f876e4a6"
time="2019-12-10T13:15:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:16:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:16:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:16:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:16:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a937f2db-966d-47fd-b5b1-76163e6b697f"
time="2019-12-10T13:16:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:17:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:17:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 857085d1-d9af-48f3-9b52-d29458dc34ba"
time="2019-12-10T13:17:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:18:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:18:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 270c22af-6026-4287-9487-8cafc41f54a7"
time="2019-12-10T13:18:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:19:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:19:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a119fd2f-545b-4bd1-a3e8-1ff0a111a4f0"
time="2019-12-10T13:19:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:20:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:20:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9b04a610-3b40-42c3-93f2-698b0486cc52"
time="2019-12-10T13:20:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:21:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:21:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 7465ee2a-d9af-4e37-b22f-1e03da2b235f"
time="2019-12-10T13:21:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:22:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:22:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5a315da6-9dac-4757-a49e-f538e367ce3d"
time="2019-12-10T13:22:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:23:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:23:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 49ef6209-cb6a-4ac1-adf2-2140da9424bd"
time="2019-12-10T13:23:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:24:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:24:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 70abd143-7439-4df0-8d6c-462a374eb0e6"
time="2019-12-10T13:24:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:25:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:25:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: eb35db06-c00c-48c3-ac35-644b718fc003"
time="2019-12-10T13:25:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:26:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:26:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:26:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:26:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bb005d70-3bfa-4afb-ab59-b49e7ee00d51"
time="2019-12-10T13:26:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:27:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:27:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 3a1123e2-aca5-4d5e-932a-8119e75639a3"
time="2019-12-10T13:27:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:28:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:28:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:28:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:28:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a016c2bd-5334-44d8-8ee0-993e8c5eb0a5"
time="2019-12-10T13:28:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:29:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:29:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 7d6400d7-8e5c-41a8-a50a-b368c70f03cc"
time="2019-12-10T13:29:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:30:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:30:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 32a080d4-52ee-4273-a168-bf0a2a1b805f"
time="2019-12-10T13:30:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:31:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:31:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:31:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:31:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4be219d3-fd7c-4870-9663-63af81ecf06f"
time="2019-12-10T13:31:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:32:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:32:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 3304deae-527b-4c82-af40-c444cb858db4"
time="2019-12-10T13:32:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:33:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:33:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 47cd22d1-da85-4ce1-a3c6-5d9343a4ec37"
time="2019-12-10T13:33:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:34:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:34:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1ff6f781-87e4-402d-8eb3-743338d6548c"
time="2019-12-10T13:34:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:35:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:35:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 86c1674b-931d-4888-a301-748fb3f24094"
time="2019-12-10T13:35:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:36:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:36:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:36:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:36:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 00c6010d-ce9b-4043-9b61-d925e0ca8668"
time="2019-12-10T13:36:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:37:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:37:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 891f44ca-1bd5-4fb1-84ed-77b306eca32c"
time="2019-12-10T13:37:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:38:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:38:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:38:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:38:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d8c7bb1b-63ea-4f4b-bd15-4c86d07e6b6f"
time="2019-12-10T13:38:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:39:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:39:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 3c72d9f5-5fd1-4a52-b23f-0a13b0a2262d"
time="2019-12-10T13:39:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:40:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:40:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 79813670-5dbf-49fe-8a99-c952e0f99058"
time="2019-12-10T13:40:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:41:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:41:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1a351df2-6f9b-4a98-b328-7376a33cf3f3"
time="2019-12-10T13:41:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:42:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:42:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cfe86ddd-5010-411e-b09f-4eaec2f53dd2"
time="2019-12-10T13:42:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:43:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:43:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 40438537-b93c-4b21-80ed-fb574b529ba0"
time="2019-12-10T13:43:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:44:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:44:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bee34b29-1eb5-49da-8071-210dc239803a"
time="2019-12-10T13:44:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:45:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:45:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 248608a7-4e32-4a83-93b7-4c4bf83efe9e"
time="2019-12-10T13:45:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:46:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:46:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:46:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:46:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1dfa3952-c75d-4e7b-ad9e-79f4b3b66780"
time="2019-12-10T13:46:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:47:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:47:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: fe14cd01-ed56-4ac1-bb46-70005a036e4a"
time="2019-12-10T13:47:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:48:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:48:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:48:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:48:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d1039088-80df-4bcb-87f0-54310c84c841"
time="2019-12-10T13:48:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:49:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:49:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 60c29cab-ec67-43b7-a129-ebec0952026f"
time="2019-12-10T13:49:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:50:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:50:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: be4e159a-b338-4dd6-9349-01d964f8d5ac"
time="2019-12-10T13:50:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:51:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:51:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1306b011-c542-4d91-988e-5162836300d1"
time="2019-12-10T13:51:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:52:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:52:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 58f4e895-23dc-46c1-9e75-dcef5b199c13"
time="2019-12-10T13:52:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:53:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:53:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b8278b2a-b75c-4074-b9ec-124ae80073f1"
time="2019-12-10T13:53:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:54:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:54:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a532b000-68f9-4e81-b4ee-e49f7d193dfe"
time="2019-12-10T13:54:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:55:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:55:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c5265ced-482a-47ef-a238-d521d072e86e"
time="2019-12-10T13:55:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:56:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:56:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b801c805-fa75-4b72-ad24-752d6ab71758"
time="2019-12-10T13:56:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:57:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:57:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 759a5e65-79d3-435a-91ee-3fd0fffd0984"
time="2019-12-10T13:57:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:58:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:58:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 334f0bcc-56af-4dac-ac44-dd642da917e0"
time="2019-12-10T13:58:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:59:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T13:59:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8f10e5a8-5d14-4b8a-b117-19a174d3e0a8"
time="2019-12-10T13:59:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:00:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:00:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1e1b162e-61e0-4078-851f-e95f8f2bff71"
time="2019-12-10T14:00:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:01:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:01:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bad7781a-e209-4018-9f84-cce146167153"
time="2019-12-10T14:01:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:02:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:02:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 59232e15-4c69-4a4f-80ea-892b0819112e"
time="2019-12-10T14:02:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:03:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:03:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a5f92933-81f3-494a-b49d-ed1528c80e77"
time="2019-12-10T14:03:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:04:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:04:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cfd5d305-c3c7-47b8-bf6a-8da9f6d0a2ab"
time="2019-12-10T14:04:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:05:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:05:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e1872aec-6cd9-44a4-ae4c-32cd819cee53"
time="2019-12-10T14:05:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:06:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:06:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bfc92aee-059e-4d6b-97fe-f5ea3e29a94f"
time="2019-12-10T14:06:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:07:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:07:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8642df01-8433-419f-9279-403689b47880"
time="2019-12-10T14:07:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:08:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:08:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 10fe43c6-808d-4df5-ad8c-0b3051cf6496"
time="2019-12-10T14:08:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:09:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:09:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f7f70c79-e9a5-40bd-9c57-45249d4cec1d"
time="2019-12-10T14:09:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:10:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:10:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e0e749f7-1f9b-4252-acef-19e4b5d55276"
time="2019-12-10T14:10:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:11:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:11:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bd9c6381-a80a-44f7-a0ad-0f33c50d9334"
time="2019-12-10T14:11:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:12:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:12:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 14fb57b5-c710-428f-b7b5-34f52a4b6dee"
time="2019-12-10T14:12:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:13:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:13:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 08eb568b-0996-4df0-9399-e192adc9073e"
time="2019-12-10T14:13:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:14:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:14:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ca03a6ef-1822-45d0-90a9-8607d598b44a"
time="2019-12-10T14:14:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:15:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:15:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ddede107-3393-4979-8801-5b1d872311a7"
time="2019-12-10T14:15:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:16:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:16:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:16:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:16:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 83bc5d0f-bc09-4e44-913d-8eb80176cd65"
time="2019-12-10T14:16:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:17:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:17:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 88179e35-7ad6-4982-87ae-fc8bd4f9e804"
time="2019-12-10T14:17:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:18:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:18:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5b4640bc-0863-4482-81eb-861fb8aeac23"
time="2019-12-10T14:18:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:19:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:19:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d8043b55-ea21-4d4a-8070-f08a891e94b8"
time="2019-12-10T14:19:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:20:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:20:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: db11d5f5-1445-4ed3-a6c7-2fc277300952"
time="2019-12-10T14:20:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:21:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:21:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 2dfd0929-ec7d-4ce8-a30f-da5f6b86187b"
time="2019-12-10T14:21:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:22:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:22:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ca334811-f079-4875-8827-65244b8a4fce"
time="2019-12-10T14:22:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:23:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:23:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b655c547-ffda-4526-a62a-19db6c20e376"
time="2019-12-10T14:23:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:24:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:24:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 2c324d93-f869-419f-adca-08e4a7dff4db"
time="2019-12-10T14:24:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:25:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:25:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1e92f4ac-569f-4a23-b198-2985ffdbb3b2"
time="2019-12-10T14:25:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:26:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:26:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:26:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:26:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c0ad6eb9-e538-4c9a-87cf-c8c65deead1e"
time="2019-12-10T14:26:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:27:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:27:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4bd58604-6fc6-4e12-9b12-86a025183a46"
time="2019-12-10T14:27:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:28:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:28:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:28:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:28:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c821eec5-e8d2-474f-8dd3-ba8776af3735"
time="2019-12-10T14:28:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:29:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:29:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 113c65a0-325f-4816-a5b9-24730b118a9f"
time="2019-12-10T14:29:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:30:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:30:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 773df783-fdaa-4433-982b-c5b1a44c6464"
time="2019-12-10T14:30:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:31:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:31:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:31:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:31:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 7aa663ef-1349-4f8d-a10d-23dda48814c0"
time="2019-12-10T14:31:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:32:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:32:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9d1edc4c-a38c-42d3-9b68-5a431dcdb5b6"
time="2019-12-10T14:32:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:33:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:33:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f213e6af-bf8e-4083-971a-46386db89389"
time="2019-12-10T14:33:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:34:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:34:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 7112f6c8-c4ba-42b4-9dba-16edd964c724"
time="2019-12-10T14:34:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:35:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:35:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e00d608d-412b-43e2-815f-e2d98593177d"
time="2019-12-10T14:35:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:36:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:36:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:36:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:36:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 99f8b38e-da46-45fb-adde-ad823b8ea7a2"
time="2019-12-10T14:36:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:37:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:37:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 6f2c8415-dc5e-4d23-ac1e-713dd2743b2b"
time="2019-12-10T14:37:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:38:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:38:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:38:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:38:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9a101825-c941-4872-accf-77153200f988"
time="2019-12-10T14:38:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:39:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:39:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d793b6f1-943b-426e-9cf9-33004bffa5eb"
time="2019-12-10T14:39:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:40:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:40:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9c40f809-be34-4567-af2b-3cc921286398"
time="2019-12-10T14:40:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:41:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:41:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 447b2123-ba13-4ece-af96-9c2153f0e3c9"
time="2019-12-10T14:41:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:42:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:42:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 6a2d3071-68c1-4ea5-94a6-fdf29e86a9fc"
time="2019-12-10T14:42:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:43:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:43:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 2e592374-78d1-4c11-a9a3-6895581b7290"
time="2019-12-10T14:43:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:44:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:44:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5ff46121-bbe7-4025-a13e-5213db33f1b2"
time="2019-12-10T14:44:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:45:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:45:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e3c3fe6b-98af-47e5-958e-0c7daae1a3f4"
time="2019-12-10T14:45:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:46:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:46:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:46:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:46:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cff35dce-884b-40e9-b1ee-74a6293af226"
time="2019-12-10T14:46:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:47:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:47:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a8a2f66a-8ea6-427b-8072-fa20bd838f51"
time="2019-12-10T14:47:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:48:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:48:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:48:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:48:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cb7cde53-406c-489d-92a4-b603dadd3019"
time="2019-12-10T14:48:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:49:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:49:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 2632cd7b-9a84-49b2-9429-4c70b20d9c3b"
time="2019-12-10T14:49:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:50:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:50:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 699f8463-3755-4127-aa50-4fe9492c6793"
time="2019-12-10T14:50:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:51:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:51:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 95c3f279-8ca9-4f65-a6bc-2511109fe94b"
time="2019-12-10T14:51:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:52:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:52:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4ee83e89-9b67-4588-b716-0f7b42c3bb33"
time="2019-12-10T14:52:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:53:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:53:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: eb0f2858-1776-4ed6-991d-d9eb5110dc1b"
time="2019-12-10T14:53:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:54:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:54:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:54:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:54:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 27b02b73-08b8-40c0-b817-c263dc168e86"
time="2019-12-10T14:54:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:55:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:55:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: eb1c5d69-7722-4e50-806e-0499033dae61"
time="2019-12-10T14:55:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:56:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:56:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b1bae15c-1dc0-47e6-af4f-af2b0c7e35ab"
time="2019-12-10T14:56:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:57:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:57:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 650a63b2-08a9-4b4f-844f-334cfd5b50ce"
time="2019-12-10T14:57:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:58:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:58:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9407589a-f3a4-4dba-8e3b-a75e6564485b"
time="2019-12-10T14:58:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:59:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T14:59:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 3752d7e2-7d53-4f3c-bc2f-a58431954bb2"
time="2019-12-10T14:59:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:00:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:00:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 0221873b-3181-470b-9b9a-c355e630664c"
time="2019-12-10T15:00:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:01:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:01:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 98f41f7c-6512-4b11-8a01-19ee83f625a0"
time="2019-12-10T15:01:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:02:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:02:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 673ed1a3-7df0-43ba-8aad-0e2d02ce8117"
time="2019-12-10T15:02:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:03:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:03:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a14df4dc-55d2-4f4f-be84-4dd174a376e3"
time="2019-12-10T15:03:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:04:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:04:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e9d92670-7ec2-4d41-9482-76228e111799"
time="2019-12-10T15:04:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:05:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:05:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a2a2c666-4155-40e3-9e10-d14c936f8ced"
time="2019-12-10T15:05:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:06:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:06:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e12871a2-a8c9-438c-ae4a-3d05c6c89c20"
time="2019-12-10T15:06:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:07:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:07:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 96e485ee-5b36-4337-91c5-13cd57a7f336"
time="2019-12-10T15:07:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:08:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:08:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 74a182e4-1ef8-4d72-a5b0-40383b9dfdaa"
time="2019-12-10T15:08:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:09:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:09:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: aff5bc9c-70ef-427b-a53c-9d668f8f7080"
time="2019-12-10T15:09:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:10:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:10:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d6cd8c2e-2aa6-4be6-82f1-6f6da3d97103"
time="2019-12-10T15:10:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:11:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:11:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 33761878-d8b5-4741-8ce5-99abf165aa4c"
time="2019-12-10T15:11:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:12:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:12:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1a44f3cb-f097-47dd-a029-d045719dbb72"
time="2019-12-10T15:12:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:13:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:13:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f3b2e19e-c0a2-41af-9982-3d166a19f0fe"
time="2019-12-10T15:13:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:14:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:14:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 95a28ce1-90aa-4325-9707-d8bc92b5fdd2"
time="2019-12-10T15:14:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:15:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:15:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d87e8290-c0ec-486b-958d-a320187b68bc"
time="2019-12-10T15:15:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:16:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:16:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:16:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:16:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c14075a3-b57c-4501-a91a-ff132b355ec0"
time="2019-12-10T15:16:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:17:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:17:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8c766c17-1f55-4995-b4e1-839d3a8299cd"
time="2019-12-10T15:17:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:18:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:18:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d923cccc-6773-45e5-bfe1-d93317cc87c9"
time="2019-12-10T15:18:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:19:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:19:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 2ace891b-ebf1-425c-b8e0-3876ac7f1e4e"
time="2019-12-10T15:19:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:20:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:20:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e988b5e4-af08-4a72-a6e9-e3151c47d83f"
time="2019-12-10T15:20:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:21:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:21:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9929d2c6-8a7b-43aa-85de-c651b18af0cb"
time="2019-12-10T15:21:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:22:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:22:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 848e1a38-609f-4694-8319-3100e4718284"
time="2019-12-10T15:22:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:23:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:23:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ba5b44ef-da25-4797-b22c-29e828ed68a8"
time="2019-12-10T15:23:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:24:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:24:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 94acbd05-78f5-4d25-869d-e33d94c38d42"
time="2019-12-10T15:24:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:25:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:25:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 738f6cd9-d92d-4ce3-b95f-8bf7bfeace12"
time="2019-12-10T15:25:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:26:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:26:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:26:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:26:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: eddfdcea-842e-46fc-a9ad-87cd54d13b01"
time="2019-12-10T15:26:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:27:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:27:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5a00abcd-64f5-4794-a204-da083872b6b1"
time="2019-12-10T15:27:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:28:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:28:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:28:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:28:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 385f917a-a256-40fa-8d97-0356bce774ec"
time="2019-12-10T15:28:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:29:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:29:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 0800028d-799a-4ba7-9944-d50f9a32f1b9"
time="2019-12-10T15:29:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:30:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:30:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: fe0fca10-ea63-425f-bf4d-2c815d490b88"
time="2019-12-10T15:30:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:31:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:31:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:31:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:31:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b7253464-faf2-4530-b61c-ce4bd040ead7"
time="2019-12-10T15:31:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:32:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:32:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4b54f7a3-b12b-4356-b54a-44092bfb161e"
time="2019-12-10T15:32:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:33:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:33:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 09eab80c-468a-4786-962d-199b828e5faf"
time="2019-12-10T15:33:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:34:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:34:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9c81bca0-20ba-4a00-b8fb-f398f10d4edd"
time="2019-12-10T15:34:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:35:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:35:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5ecc9f53-584f-4c4c-be07-75bd2b878215"
time="2019-12-10T15:35:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:36:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:36:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:36:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:36:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ab6b1a75-cc0f-4bb2-86a2-be0e715c77c5"
time="2019-12-10T15:36:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:37:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:37:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c37c7463-147b-4698-90ef-a0675b977bef"
time="2019-12-10T15:37:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:38:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:38:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:38:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:38:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d7481404-1950-4549-890d-ee2a5cde4e25"
time="2019-12-10T15:38:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:39:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:39:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4b3e9ac8-ac00-4a00-a9eb-b6c3a9f0db5f"
time="2019-12-10T15:39:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:40:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:40:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9b33539e-5d4a-4c72-a49d-56b1f8e17273"
time="2019-12-10T15:40:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:41:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:41:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5c8fec5b-5da4-47ad-83f5-80f5e196b185"
time="2019-12-10T15:41:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:42:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:42:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 00557aa2-1486-497a-b1cb-00cea4515528"
time="2019-12-10T15:42:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:43:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:43:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f355ea3e-453a-4dfd-bb8a-029337b8e07a"
time="2019-12-10T15:43:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:44:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:44:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 58f584ed-15a3-4bb0-ac8c-93813d33ed98"
time="2019-12-10T15:44:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:45:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:45:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1d340eb5-a4a7-46cf-b6b2-cbc35591df8e"
time="2019-12-10T15:45:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:46:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:46:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:46:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:46:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c8ae1644-e975-4525-b3ce-71a4bc00e901"
time="2019-12-10T15:46:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:47:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:47:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cf0f99db-184e-473e-8a1e-acb584096f8a"
time="2019-12-10T15:47:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:48:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:48:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:48:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:48:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 82d97e83-4902-4cf5-8436-caeafff0718f"
time="2019-12-10T15:48:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:49:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:49:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d5e6a7b2-5a26-425a-9b4d-d61ab3b14b3b"
time="2019-12-10T15:49:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:50:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:50:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 58eda184-b352-4164-b544-262c813e45a3"
time="2019-12-10T15:50:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:51:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:51:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4eb83d52-b35b-4562-b622-116a671fc02f"
time="2019-12-10T15:51:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:52:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:52:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ead9c731-5e2a-45e0-baaf-b049fa78a2c3"
time="2019-12-10T15:52:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:53:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:53:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4a8f25dd-a729-4d57-a915-609c130aa224"
time="2019-12-10T15:53:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:54:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:54:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 135195ae-f179-4c98-a75c-3925062f6ebf"
time="2019-12-10T15:54:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:55:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:55:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cd284538-8be8-43a1-9d5e-eb053c15b316"
time="2019-12-10T15:55:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:56:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:56:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d99bc837-8590-43f6-88fe-fbb86e08e161"
time="2019-12-10T15:56:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:57:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:57:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 6f3f12bc-2135-48d7-81a4-24a63aa364d6"
time="2019-12-10T15:57:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:58:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:58:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 05d4534e-acca-44c4-85ed-f6a7c8277dae"
time="2019-12-10T15:58:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:59:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T15:59:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 34c2a92d-7b03-4ffc-a2e6-446bdd81b373"
time="2019-12-10T15:59:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:00:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:00:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 06738481-d54a-4e16-8fa4-82a1fe1f071b"
time="2019-12-10T16:00:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:01:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:01:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: dfab6ff8-525c-4f3c-852a-0f5f5edaf237"
time="2019-12-10T16:01:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:02:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:02:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b36f5a0b-59a0-45ea-9dec-b94f3aa12251"
time="2019-12-10T16:02:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:03:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:03:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 6c8cad44-7615-483b-93aa-9091ceea724c"
time="2019-12-10T16:03:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:04:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:04:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f1e1b655-89b8-49f6-85cc-0a9626a934e5"
time="2019-12-10T16:04:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:05:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:05:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d347c6ea-0500-4047-b84f-d98198131c6b"
time="2019-12-10T16:05:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:06:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:06:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 689cf619-8211-448e-9ed6-941c9780fbd6"
time="2019-12-10T16:06:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:07:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:07:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d27fa95d-544c-411a-9bbf-8a552ba3d524"
time="2019-12-10T16:07:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:08:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:08:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 58d2f433-6a60-4e79-a6d4-9a0a5acf0530"
time="2019-12-10T16:08:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:09:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:09:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 59f9bec8-3796-4450-96ef-df1ddd84ba92"
time="2019-12-10T16:09:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:10:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:10:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1aecb470-b5e6-44a2-abb9-e7525188a256"
time="2019-12-10T16:10:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:11:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:11:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 39519720-4448-4e92-9b1b-51a90c2d08bc"
time="2019-12-10T16:11:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:12:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:12:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9ebceba1-84d7-4bb6-bd7f-3d70db4223cd"
time="2019-12-10T16:12:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:13:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:13:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a3154a89-858d-4833-8553-82b272ef79ce"
time="2019-12-10T16:13:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:14:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:14:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bc18cf62-b125-4fde-88f5-44becf8f6256"
time="2019-12-10T16:14:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:15:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:15:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f9c0f475-b0f0-4938-a956-6c6f6334c981"
time="2019-12-10T16:15:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:16:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:16:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:16:24Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:16:24Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: da15fc93-2e46-4742-85a5-b4e240f4e858"
time="2019-12-10T16:16:24Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:17:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:17:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 3e278aad-28f9-48d2-932b-26d22359d5da"
time="2019-12-10T16:17:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:18:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:18:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e0b73de9-9ddf-49a4-b014-50b53d743825"
time="2019-12-10T16:18:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:19:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:19:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c00d2301-6047-4952-a22b-36c0df431911"
time="2019-12-10T16:19:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:20:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:20:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 91eac765-f543-49d6-b98a-05735ae9b5cc"
time="2019-12-10T16:20:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:21:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:21:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ea22fcad-6e77-4a95-885b-b756a3de5da5"
time="2019-12-10T16:21:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:22:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:22:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 56bf306a-cf25-4d61-9c14-e6349d94f8cb"
time="2019-12-10T16:22:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:23:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:23:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 0db23356-1617-4d95-9d77-80fc815d5a4c"
time="2019-12-10T16:23:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:24:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:24:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 3dd98e1b-e110-46f7-a059-5ec1370f997d"
time="2019-12-10T16:24:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:25:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:25:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f7abcae2-a9f4-43cf-aa89-b722c3233024"
time="2019-12-10T16:25:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:26:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:26:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:26:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:26:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b10f58de-aec0-45f1-a3ba-17eab2c5a61b"
time="2019-12-10T16:26:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:27:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:27:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 48384e33-53af-4083-bdbc-011f020310f2"
time="2019-12-10T16:27:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:28:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:28:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:28:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:28:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8a9b37c6-e9f8-4e0e-9adc-61ceafc7b137"
time="2019-12-10T16:28:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:29:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:29:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 39d6651b-0367-4c0f-80b8-7c1549186217"
time="2019-12-10T16:29:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:30:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:30:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f17e532b-02d5-4723-a6af-2b08f8917f0b"
time="2019-12-10T16:30:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:31:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:31:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:31:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:31:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 64b7c7f9-20ee-4ad4-bd2c-102f8d463775"
time="2019-12-10T16:31:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:32:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:32:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5538148f-c7a0-4c17-88c1-c6b1791f6d44"
time="2019-12-10T16:32:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:33:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:33:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8768abcf-e747-4afe-b70b-aec31fb12e18"
time="2019-12-10T16:33:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:34:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:34:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4c86f02e-ed38-4e0e-96f2-89bd9be00c6c"
time="2019-12-10T16:34:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:35:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:35:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4a821c7a-6f70-47db-a492-cfa2cb9c4ccc"
time="2019-12-10T16:35:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:36:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:36:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:36:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:36:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 6c6e9759-bb38-4519-a2ce-b4ac08cf8240"
time="2019-12-10T16:36:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:37:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:37:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9f7f521b-1a1c-4c4e-9d9b-26189009e2ee"
time="2019-12-10T16:37:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:38:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:38:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:38:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:38:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d92cc7f0-7cad-4e34-9301-ec6d18cd2c1e"
time="2019-12-10T16:38:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:39:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:39:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 6bec526c-1bb9-4dfd-a80e-c6f3fc21e173"
time="2019-12-10T16:39:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:40:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:40:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 25e74457-eed0-46aa-b4d2-a7a6b5393852"
time="2019-12-10T16:40:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:41:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:41:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 67471b2e-15a8-457d-ba5e-02031b40e207"
time="2019-12-10T16:41:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:42:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:42:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4f47bb10-23ac-4032-8c02-00893e5b3320"
time="2019-12-10T16:42:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:43:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:43:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b2737941-e31c-40c9-852b-23b97741597f"
time="2019-12-10T16:43:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:44:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:44:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4c65aab8-e536-442e-8f63-f8173abf6cd1"
time="2019-12-10T16:44:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:45:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:45:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 017638c2-75fd-4536-9b3b-6f492247e8eb"
time="2019-12-10T16:45:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:46:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:46:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:46:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:46:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 2ccff9ad-b2f5-458e-9d25-3be54ef82453"
time="2019-12-10T16:46:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:47:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:47:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 79b0e577-60e1-43a2-925b-2ec577af9510"
time="2019-12-10T16:47:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:48:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:48:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:48:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:48:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 03263df3-c436-4a35-aa55-0839052af6d5"
time="2019-12-10T16:48:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:49:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:49:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 6ce7d8c3-ee2c-4ddd-bd2b-79ffbdd76129"
time="2019-12-10T16:49:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:50:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:50:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: fb64dee6-22ea-4f6b-a630-6512c94982c5"
time="2019-12-10T16:50:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:51:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:51:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 0b43dab6-f9a2-41c0-85c3-9a1000b85033"
time="2019-12-10T16:51:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:52:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:52:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 80ae5a36-a819-424f-9148-b4d9de50262a"
time="2019-12-10T16:52:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:53:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:53:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 496baee6-ff5a-4ccc-8663-4790ac353bac"
time="2019-12-10T16:53:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:54:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:54:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 145482bf-89ee-42a8-b8ed-4d322d2a3dc5"
time="2019-12-10T16:54:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:55:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:55:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 73a111c6-e945-4316-a157-18b069e7754b"
time="2019-12-10T16:55:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:56:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:56:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 395093a2-8f84-4eaa-8f68-bc59f3561b4a"
time="2019-12-10T16:56:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:57:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:57:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 01001405-6e46-4f51-bcd5-fbac40f70f99"
time="2019-12-10T16:57:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:58:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:58:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4149e48b-5d20-4e36-9f3e-81eb9f2d3a54"
time="2019-12-10T16:58:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:59:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:59:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:59:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T16:59:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 49f4a263-32ca-4494-9940-1daaa05fdda0"
time="2019-12-10T16:59:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:00:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:00:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1e6f1d00-2624-4aae-b839-255d84d8395a"
time="2019-12-10T17:00:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:01:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:01:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 03a3e750-e06a-4f9e-b684-d916bcd0cfe9"
time="2019-12-10T17:01:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:02:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:02:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4725396e-072d-430c-8b1b-62c22c7608f0"
time="2019-12-10T17:02:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:03:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:03:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b9bdd481-610a-4e62-a493-31663aa887f3"
time="2019-12-10T17:03:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:04:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:04:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 986f47c4-ee73-4c52-9f40-a37e343f680c"
time="2019-12-10T17:04:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:05:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:05:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 0bd87ff5-765b-4f10-a063-922453a15cac"
time="2019-12-10T17:05:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:06:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:06:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 56f33561-f4ac-40ca-bc1e-752029e571a8"
time="2019-12-10T17:06:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:07:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:07:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cc500b3d-dbae-4d11-9d30-93191bb0221d"
time="2019-12-10T17:07:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:08:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:08:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:08:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:08:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d2d180ee-2e57-4c60-8bec-a752c5c49644"
time="2019-12-10T17:08:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:09:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:09:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 1402c105-b928-4e38-b0cc-d860c108f699"
time="2019-12-10T17:09:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:10:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:10:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 24ad1b71-7bcd-4ef7-ae74-1bc16b40d247"
time="2019-12-10T17:10:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:11:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:11:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: dceaa2a2-8d19-48b1-8a94-589fec79b132"
time="2019-12-10T17:11:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:12:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:12:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 7daedf12-2284-4094-90ab-466029648592"
time="2019-12-10T17:12:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:13:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:13:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 3ab9f1e5-92d7-4bbb-85a4-d9c0b299ad8c"
time="2019-12-10T17:13:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:14:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:14:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bf3cff51-1895-401f-9231-a1667b816118"
time="2019-12-10T17:14:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:15:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:15:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 22c5595c-b383-459e-b6c1-3a6de3928200"
time="2019-12-10T17:15:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:16:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:16:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:16:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:16:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8ed48e31-112d-4fbf-a82e-26b53cabbc9d"
time="2019-12-10T17:16:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:17:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:17:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 124ba868-fc3e-4c5f-a761-0a21b5cd3ef4"
time="2019-12-10T17:17:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:18:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:18:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9537daa2-2d4d-4c8b-90fb-10b2df4fd927"
time="2019-12-10T17:18:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:19:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:19:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 51735eae-d877-4dd2-ad8c-8b5a3145eb3d"
time="2019-12-10T17:19:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:20:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:20:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 393df895-ebb1-42f3-a08a-25c53ddf60be"
time="2019-12-10T17:20:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:21:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:21:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:21:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 06fc8979-c721-4f69-838e-e4549d2ebd00"
time="2019-12-10T17:21:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:22:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:22:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:22:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 60f67f51-d17a-4b15-967d-99a68c1504c6"
time="2019-12-10T17:22:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:23:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:23:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:23:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4f8ade13-2699-445e-9732-6496a317a7a2"
time="2019-12-10T17:23:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:24:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:24:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:24:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 37a306bb-30ae-40e6-9b00-8af912251be0"
time="2019-12-10T17:24:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:25:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:25:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:25:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5a6bcbe9-6614-416d-9d15-688272e9f01d"
time="2019-12-10T17:25:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:26:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:26:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:26:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:26:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 96cd9939-4693-4fc9-b7ca-91989ae43ff8"
time="2019-12-10T17:26:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:27:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:27:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:27:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 46aec848-ff34-4cb9-a1ef-dd2a868796d7"
time="2019-12-10T17:27:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:28:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:28:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:28:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:28:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e52e230c-7378-42ff-8f58-d5edadef6f2a"
time="2019-12-10T17:28:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:29:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:29:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:29:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8805344d-371e-4eaa-903a-3ebdbe105dca"
time="2019-12-10T17:29:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:30:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:30:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:30:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a2eb1e6d-c3d0-4430-bab2-e504b6e73fd0"
time="2019-12-10T17:30:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:31:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:31:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:31:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:31:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d69ea58c-6cd6-4129-a300-d704311d0211"
time="2019-12-10T17:31:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:32:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:32:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:32:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 4384e466-b31c-4c0e-b63c-f1d580659f9d"
time="2019-12-10T17:32:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:33:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:33:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:33:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 3b2611c6-7ccc-4709-9f95-bdbdda1c7cdd"
time="2019-12-10T17:33:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:34:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:34:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:34:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 9068bf90-deea-434c-9c2a-4cffcade13f5"
time="2019-12-10T17:34:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:35:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:35:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:35:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c04de73c-b58d-4e6b-b6ff-edd2f8863309"
time="2019-12-10T17:35:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:36:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:36:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:36:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:36:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 707a8e31-77a8-4fd5-abdf-580932a2e6c8"
time="2019-12-10T17:36:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:37:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:37:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:37:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 79fffb2e-0e6b-43fb-8920-c4d73cb18e16"
time="2019-12-10T17:37:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:38:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:38:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:38:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:38:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: dbf55807-f139-427c-8b8c-e49bbc8144b1"
time="2019-12-10T17:38:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:39:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:39:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:39:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b90794e7-d7d6-41ed-bbac-01a91b36c068"
time="2019-12-10T17:39:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:40:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:40:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:40:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 7c68c53e-6360-4ed7-8d95-006fc0945042"
time="2019-12-10T17:40:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:41:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:41:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:41:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: e8028b73-132d-453b-8134-994aa014145c"
time="2019-12-10T17:41:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:42:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:42:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:42:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 21c7c0b3-d936-4294-abb2-5049eb1ef531"
time="2019-12-10T17:42:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:43:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:43:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:43:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cf38c000-eba2-4f53-b39f-c1e508ed5763"
time="2019-12-10T17:43:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:44:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:44:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:44:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 7af4a359-c63c-43b9-9e32-c64535b7e3ce"
time="2019-12-10T17:44:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:45:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:45:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:45:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 0ac09313-903c-4fe7-9f40-17089908e3dc"
time="2019-12-10T17:45:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:46:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:46:23Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:46:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:46:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f1593aca-e51c-445b-91f0-9c5dd2b75c85"
time="2019-12-10T17:46:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:47:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:47:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:47:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c9ffb25a-be83-41da-8be9-49edb0ac9685"
time="2019-12-10T17:47:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:48:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:48:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:48:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:48:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 66799f5b-a046-4de9-b55d-93d668a4ac1e"
time="2019-12-10T17:48:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:49:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:49:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:49:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 18a33588-bea6-437e-847f-0be731e0fe7c"
time="2019-12-10T17:49:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:50:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:50:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:50:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cd99538b-0ba1-409e-b07d-be696ccef096"
time="2019-12-10T17:50:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:51:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:51:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:51:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: fa728b55-5139-4e0c-a95e-6c4bec280176"
time="2019-12-10T17:51:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:52:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:52:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:52:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8741d56f-1721-4df4-bc20-10f6d61be2e8"
time="2019-12-10T17:52:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:53:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:53:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:53:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 5a82f146-2782-476b-95ce-acea825db253"
time="2019-12-10T17:53:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:54:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:54:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:54:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 747f3303-330f-44f3-b535-c21bd655c730"
time="2019-12-10T17:54:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:55:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:55:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:55:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: aea54d78-78fb-444e-b10a-5a2a47e46219"
time="2019-12-10T17:55:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:56:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:56:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:56:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f99303be-2dfe-4584-b3a3-e7270d57bec1"
time="2019-12-10T17:56:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:57:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:57:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:57:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 57a86901-ce29-4041-a26d-2e279b9523f1"
time="2019-12-10T17:57:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:58:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:58:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:58:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: ce421394-45d9-4a94-b9ab-a31a9e19b5e3"
time="2019-12-10T17:58:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:59:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:59:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T17:59:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8c898331-002c-4da6-bcd6-99eab4c123b2"
time="2019-12-10T17:59:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:00:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:00:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:00:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 68a23709-8f64-4ca6-a32f-7d68c33745c8"
time="2019-12-10T18:00:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:01:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:01:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:01:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 218bb54e-7792-46a5-b1ed-dc66599250d3"
time="2019-12-10T18:01:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:02:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:02:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:02:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 98903f76-f5ea-4911-a615-6ff6f2df8abe"
time="2019-12-10T18:02:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:03:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:03:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:03:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 860ab3e7-6299-4199-bedb-da850cbc620f"
time="2019-12-10T18:03:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:04:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:04:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:04:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: f25fb116-e494-4f6d-b9a2-4916ee6cf1c2"
time="2019-12-10T18:04:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:05:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:05:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:05:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 76727ee5-3b7d-4e5d-8eb0-564cd8c7f5e2"
time="2019-12-10T18:05:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:06:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:06:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:06:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cec0a24c-35ac-4366-b7e4-efd2629d2e14"
time="2019-12-10T18:06:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:07:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:07:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:07:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 2398da10-b149-4460-b716-11266b4538fc"
time="2019-12-10T18:07:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:08:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:08:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:08:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: b3ffdf71-6171-44c6-92c3-80d07032fccb"
time="2019-12-10T18:08:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:09:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:09:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:09:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 04f202cf-7115-418a-a1be-7be4e98cc1bb"
time="2019-12-10T18:09:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:10:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:10:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:10:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 8a850e01-89a3-4baf-b352-da6642f13923"
time="2019-12-10T18:10:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:11:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:11:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:11:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 52058943-f063-4fd5-b4b5-713526811157"
time="2019-12-10T18:11:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:12:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:12:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:12:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a102aaa2-4676-4cb4-b72c-e985bcb654b7"
time="2019-12-10T18:12:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:13:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:13:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:13:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bcb354ad-f3f9-4ae6-8d9f-8599b4cc0e20"
time="2019-12-10T18:13:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:14:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:14:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:14:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: bf6d9fca-6805-4d95-89cf-3e6421830a39"
time="2019-12-10T18:14:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:15:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:15:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:15:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: a6f29c62-008c-4fb4-8b9a-9ad6139ac937"
time="2019-12-10T18:15:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:16:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:16:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:16:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:16:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 96a1f083-d517-4e8c-bf0b-d60081a267b5"
time="2019-12-10T18:16:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:17:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:17:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:17:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: cb4b718d-d145-43fa-9a88-80c5253a3436"
time="2019-12-10T18:17:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:18:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:18:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:18:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: c7f63c50-f3b8-4172-a085-ed4ee04f10ef"
time="2019-12-10T18:18:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:19:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:19:23Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:19:23Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: d40b7e00-b193-4740-a20d-67561c6a55c4"
time="2019-12-10T18:19:23Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io A [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:20:22Z" level=info msg="Desired change: CREATE grafana.test.hydrosphere.io TXT [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:20:22Z" level=error msg="Failure in zone test.hydrosphere.io. [Id: /hostedzone/Z1J6K163M20JF5]"
time="2019-12-10T18:20:22Z" level=error msg="AccessDenied: The resource hostedzone/Z1J6K163M20JF5 can only be managed through servicediscovery.amazonaws.com (arn:aws:servicediscovery:us-west-2:943173312784:namespace/ns-rqxxjeszlg2wuzid)\n\tstatus code: 403, request id: 975a7c87-9bb0-45a6-8be2-2a9638f915c2"
time="2019-12-10T18:20:22Z" level=error msg="Failed to submit all changes for the following zones: [/hostedzone/Z1J6K163M20JF5]"
==== END logs for container external-dns of pod kube-system/external-dns-7f64f578c4-tbjfs ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-9v59b ====
I1209 19:11:10.289262       1 flags.go:33] FLAG: --alsologtostderr="false"
I1209 19:11:10.289307       1 flags.go:33] FLAG: --bind-address="0.0.0.0"
I1209 19:11:10.289313       1 flags.go:33] FLAG: --cleanup="false"
I1209 19:11:10.289322       1 flags.go:33] FLAG: --cleanup-iptables="false"
I1209 19:11:10.289326       1 flags.go:33] FLAG: --cleanup-ipvs="true"
I1209 19:11:10.289329       1 flags.go:33] FLAG: --cluster-cidr=""
I1209 19:11:10.289335       1 flags.go:33] FLAG: --config="/var/lib/kube-proxy-config/config"
I1209 19:11:10.289340       1 flags.go:33] FLAG: --config-sync-period="15m0s"
I1209 19:11:10.289346       1 flags.go:33] FLAG: --conntrack-max="0"
I1209 19:11:10.289355       1 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I1209 19:11:10.289359       1 flags.go:33] FLAG: --conntrack-min="131072"
I1209 19:11:10.289364       1 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1209 19:11:10.289374       1 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1209 19:11:10.289378       1 flags.go:33] FLAG: --feature-gates=""
I1209 19:11:10.289388       1 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1209 19:11:10.289392       1 flags.go:33] FLAG: --healthz-port="10256"
I1209 19:11:10.289397       1 flags.go:33] FLAG: --help="false"
I1209 19:11:10.289402       1 flags.go:33] FLAG: --hostname-override=""
I1209 19:11:10.289406       1 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I1209 19:11:10.289410       1 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I1209 19:11:10.289423       1 flags.go:33] FLAG: --iptables-sync-period="30s"
I1209 19:11:10.289428       1 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I1209 19:11:10.289440       1 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I1209 19:11:10.289444       1 flags.go:33] FLAG: --ipvs-scheduler=""
I1209 19:11:10.289449       1 flags.go:33] FLAG: --ipvs-strict-arp="false"
I1209 19:11:10.289453       1 flags.go:33] FLAG: --ipvs-sync-period="30s"
I1209 19:11:10.289458       1 flags.go:33] FLAG: --kube-api-burst="10"
I1209 19:11:10.289462       1 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1209 19:11:10.289469       1 flags.go:33] FLAG: --kube-api-qps="5"
I1209 19:11:10.289476       1 flags.go:33] FLAG: --kubeconfig=""
I1209 19:11:10.289480       1 flags.go:33] FLAG: --log-backtrace-at=":0"
I1209 19:11:10.289490       1 flags.go:33] FLAG: --log-dir=""
I1209 19:11:10.289495       1 flags.go:33] FLAG: --log-file=""
I1209 19:11:10.289499       1 flags.go:33] FLAG: --log-flush-frequency="5s"
I1209 19:11:10.289504       1 flags.go:33] FLAG: --logtostderr="true"
I1209 19:11:10.289508       1 flags.go:33] FLAG: --masquerade-all="false"
I1209 19:11:10.289513       1 flags.go:33] FLAG: --master=""
I1209 19:11:10.289517       1 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I1209 19:11:10.289522       1 flags.go:33] FLAG: --metrics-port="10249"
I1209 19:11:10.289527       1 flags.go:33] FLAG: --nodeport-addresses="[]"
I1209 19:11:10.289532       1 flags.go:33] FLAG: --oom-score-adj="-999"
I1209 19:11:10.289536       1 flags.go:33] FLAG: --profiling="false"
I1209 19:11:10.289541       1 flags.go:33] FLAG: --proxy-mode=""
I1209 19:11:10.289551       1 flags.go:33] FLAG: --proxy-port-range=""
I1209 19:11:10.289560       1 flags.go:33] FLAG: --resource-container="/kube-proxy"
I1209 19:11:10.289565       1 flags.go:33] FLAG: --skip-headers="false"
I1209 19:11:10.289570       1 flags.go:33] FLAG: --stderrthreshold="2"
I1209 19:11:10.289575       1 flags.go:33] FLAG: --udp-timeout="250ms"
I1209 19:11:10.289580       1 flags.go:33] FLAG: --v="2"
I1209 19:11:10.289585       1 flags.go:33] FLAG: --version="false"
I1209 19:11:10.289594       1 flags.go:33] FLAG: --vmodule=""
I1209 19:11:10.289599       1 flags.go:33] FLAG: --write-config-to=""
I1209 19:11:10.290601       1 feature_gate.go:226] feature gates: &{map[]}
I1209 19:11:10.584262       1 server_others.go:146] Using iptables Proxier.
W1209 19:11:10.584370       1 proxier.go:319] clusterCIDR not specified, unable to distinguish between internal and external traffic
I1209 19:11:10.584496       1 iptables.go:200] Could not connect to D-Bus system bus: dial unix /var/run/dbus/system_bus_socket: connect: no such file or directory
I1209 19:11:10.584539       1 server.go:562] Version: v1.14.6
I1209 19:11:10.590670       1 server.go:578] Running in resource-only container "/kube-proxy"
I1209 19:11:10.591137       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I1209 19:11:10.591162       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I1209 19:11:10.591243       1 mount_linux.go:156] Detected OS without systemd
I1209 19:11:10.591430       1 conntrack.go:83] Setting conntrack hashsize to 32768
I1209 19:11:10.604466       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I1209 19:11:10.604545       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I1209 19:11:10.605363       1 config.go:102] Starting endpoints config controller
I1209 19:11:10.605396       1 controller_utils.go:1027] Waiting for caches to sync for endpoints config controller
I1209 19:11:10.605439       1 config.go:202] Starting service config controller
I1209 19:11:10.605452       1 controller_utils.go:1027] Waiting for caches to sync for service config controller
I1209 19:11:10.705545       1 controller_utils.go:1034] Caches are synced for service config controller
I1209 19:11:10.705754       1 proxier.go:661] Not syncing iptables until Services and Endpoints have been received from master
I1209 19:11:10.705775       1 controller_utils.go:1034] Caches are synced for endpoints config controller
I1209 19:11:10.705841       1 service.go:332] Adding new service port "kube-system/kube-dns:dns" at 172.20.0.10:53/UDP
I1209 19:11:10.705856       1 service.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 172.20.0.10:53/TCP
I1209 19:11:10.705864       1 service.go:332] Adding new service port "default/kubernetes:https" at 172.20.0.1:443/TCP
I1209 19:11:26.789307       1 proxier.go:675] Stale udp service kube-system/kube-dns:dns -> 172.20.0.10
I1209 19:13:36.341576       1 service.go:332] Adding new service port "kube-system/tiller-deploy:tiller" at 172.20.92.87:44134/TCP
I1209 19:13:48.697992       1 service.go:332] Adding new service port "logging/loki:http-metrics" at 172.20.133.108:3100/TCP
I1209 19:13:49.548572       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller-metrics:metrics" at 172.20.200.219:9913/TCP
I1209 19:13:49.571760       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-default-backend:http" at 172.20.203.143:80/TCP
I1209 19:13:49.594783       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller:http" at 172.20.159.244:80/TCP
I1209 19:13:49.594803       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller:https" at 172.20.159.244:443/TCP
I1209 19:13:49.609238       1 proxier.go:1464] Opened local port "nodePort for ingress-system/nginx-nginx-ingress-controller:https" (:30657/tcp)
I1209 19:13:49.609383       1 proxier.go:1464] Opened local port "nodePort for ingress-system/nginx-nginx-ingress-controller:http" (:31592/tcp)
I1209 19:13:49.727712       1 service.go:332] Adding new service port "kube-system/sealed-secrets:" at 172.20.176.113:8080/TCP
I1209 19:13:50.313815       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.128.244:7979/TCP
I1209 19:13:52.247552       1 service.go:334] Updating existing service port "ingress-system/nginx-nginx-ingress-controller:http" at 172.20.159.244:80/TCP
I1209 19:13:52.247588       1 service.go:334] Updating existing service port "ingress-system/nginx-nginx-ingress-controller:https" at 172.20.159.244:443/TCP
I1209 19:14:29.085877       1 service.go:332] Adding new service port "monitoring/prometheus-operator-prometheus:web" at 172.20.180.248:9090/TCP
I1209 19:14:29.106425       1 service.go:332] Adding new service port "monitoring/prometheus-operator-grafana:service" at 172.20.107.114:80/TCP
I1209 19:14:29.106447       1 service.go:332] Adding new service port "monitoring/prometheus-operator-kube-state-metrics:http" at 172.20.186.248:8080/TCP
I1209 19:14:29.123441       1 service.go:332] Adding new service port "monitoring/prometheus-operator-prometheus-node-exporter:metrics" at 172.20.51.213:9100/TCP
I1209 19:14:29.123461       1 service.go:332] Adding new service port "monitoring/prometheus-operator-alertmanager:web" at 172.20.233.102:9093/TCP
I1209 19:14:29.140224       1 service.go:332] Adding new service port "monitoring/prometheus-operator-operator:http" at 172.20.129.47:8080/TCP
I1209 19:14:29.140243       1 service.go:332] Adding new service port "monitoring/prometheus-operator-operator:https" at 172.20.129.47:443/TCP
I1209 19:18:34.259375       1 service.go:332] Adding new service port "cert-manager/cert-manager:" at 172.20.87.158:9402/TCP
I1209 19:18:34.281430       1 service.go:332] Adding new service port "cert-manager/cert-manager-webhook:https" at 172.20.218.185:443/TCP
I1209 19:18:55.216944       1 service.go:332] Adding new service port "kube-system/state-kube-state-metrics:http" at 172.20.52.45:8080/TCP
I1210 11:24:22.401403       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:25:41.353074       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.215.147:7979/TCP
I1210 11:28:36.660456       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:30:42.088454       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.58.6:7979/TCP
I1210 11:37:24.334115       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:37:28.667712       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.220.66:7979/TCP
I1210 11:44:19.400622       1 service.go:332] Adding new service port "kube-system/external-dns:http" at 172.20.34.195:7979/TCP
I1210 12:40:55.413907       1 service.go:357] Removing service port "kube-system/external-dns:http"
I1210 12:40:59.231465       1 service.go:332] Adding new service port "kube-system/external-dns:http" at 172.20.138.201:7979/TCP
==== END logs for container kube-proxy of pod kube-system/kube-proxy-9v59b ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-j6bpg ====
I1209 19:11:10.484867       1 flags.go:33] FLAG: --alsologtostderr="false"
I1209 19:11:10.484910       1 flags.go:33] FLAG: --bind-address="0.0.0.0"
I1209 19:11:10.484917       1 flags.go:33] FLAG: --cleanup="false"
I1209 19:11:10.484923       1 flags.go:33] FLAG: --cleanup-iptables="false"
I1209 19:11:10.484926       1 flags.go:33] FLAG: --cleanup-ipvs="true"
I1209 19:11:10.484930       1 flags.go:33] FLAG: --cluster-cidr=""
I1209 19:11:10.484935       1 flags.go:33] FLAG: --config="/var/lib/kube-proxy-config/config"
I1209 19:11:10.484939       1 flags.go:33] FLAG: --config-sync-period="15m0s"
I1209 19:11:10.484944       1 flags.go:33] FLAG: --conntrack-max="0"
I1209 19:11:10.484949       1 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I1209 19:11:10.484953       1 flags.go:33] FLAG: --conntrack-min="131072"
I1209 19:11:10.484958       1 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1209 19:11:10.484962       1 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1209 19:11:10.484969       1 flags.go:33] FLAG: --feature-gates=""
I1209 19:11:10.484975       1 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1209 19:11:10.484979       1 flags.go:33] FLAG: --healthz-port="10256"
I1209 19:11:10.484982       1 flags.go:33] FLAG: --help="false"
I1209 19:11:10.484987       1 flags.go:33] FLAG: --hostname-override=""
I1209 19:11:10.484990       1 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I1209 19:11:10.484995       1 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I1209 19:11:10.484999       1 flags.go:33] FLAG: --iptables-sync-period="30s"
I1209 19:11:10.485005       1 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I1209 19:11:10.485013       1 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I1209 19:11:10.485017       1 flags.go:33] FLAG: --ipvs-scheduler=""
I1209 19:11:10.485021       1 flags.go:33] FLAG: --ipvs-strict-arp="false"
I1209 19:11:10.485026       1 flags.go:33] FLAG: --ipvs-sync-period="30s"
I1209 19:11:10.485036       1 flags.go:33] FLAG: --kube-api-burst="10"
I1209 19:11:10.485040       1 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1209 19:11:10.485049       1 flags.go:33] FLAG: --kube-api-qps="5"
I1209 19:11:10.485056       1 flags.go:33] FLAG: --kubeconfig=""
I1209 19:11:10.485060       1 flags.go:33] FLAG: --log-backtrace-at=":0"
I1209 19:11:10.485070       1 flags.go:33] FLAG: --log-dir=""
I1209 19:11:10.485075       1 flags.go:33] FLAG: --log-file=""
I1209 19:11:10.485079       1 flags.go:33] FLAG: --log-flush-frequency="5s"
I1209 19:11:10.485084       1 flags.go:33] FLAG: --logtostderr="true"
I1209 19:11:10.485088       1 flags.go:33] FLAG: --masquerade-all="false"
I1209 19:11:10.485095       1 flags.go:33] FLAG: --master=""
I1209 19:11:10.485101       1 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I1209 19:11:10.485105       1 flags.go:33] FLAG: --metrics-port="10249"
I1209 19:11:10.485109       1 flags.go:33] FLAG: --nodeport-addresses="[]"
I1209 19:11:10.485115       1 flags.go:33] FLAG: --oom-score-adj="-999"
I1209 19:11:10.485118       1 flags.go:33] FLAG: --profiling="false"
I1209 19:11:10.485122       1 flags.go:33] FLAG: --proxy-mode=""
I1209 19:11:10.485127       1 flags.go:33] FLAG: --proxy-port-range=""
I1209 19:11:10.485132       1 flags.go:33] FLAG: --resource-container="/kube-proxy"
I1209 19:11:10.485136       1 flags.go:33] FLAG: --skip-headers="false"
I1209 19:11:10.485140       1 flags.go:33] FLAG: --stderrthreshold="2"
I1209 19:11:10.485143       1 flags.go:33] FLAG: --udp-timeout="250ms"
I1209 19:11:10.485147       1 flags.go:33] FLAG: --v="2"
I1209 19:11:10.485151       1 flags.go:33] FLAG: --version="false"
I1209 19:11:10.485156       1 flags.go:33] FLAG: --vmodule=""
I1209 19:11:10.485160       1 flags.go:33] FLAG: --write-config-to=""
I1209 19:11:10.486102       1 feature_gate.go:226] feature gates: &{map[]}
I1209 19:11:10.807166       1 server_others.go:146] Using iptables Proxier.
W1209 19:11:10.807342       1 proxier.go:319] clusterCIDR not specified, unable to distinguish between internal and external traffic
I1209 19:11:10.807461       1 iptables.go:200] Could not connect to D-Bus system bus: dial unix /var/run/dbus/system_bus_socket: connect: no such file or directory
I1209 19:11:10.807500       1 server.go:562] Version: v1.14.6
I1209 19:11:10.814577       1 server.go:578] Running in resource-only container "/kube-proxy"
I1209 19:11:10.815077       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I1209 19:11:10.815102       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I1209 19:11:10.815198       1 mount_linux.go:156] Detected OS without systemd
I1209 19:11:10.815377       1 conntrack.go:83] Setting conntrack hashsize to 32768
I1209 19:11:10.827374       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I1209 19:11:10.827434       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I1209 19:11:10.827568       1 config.go:102] Starting endpoints config controller
I1209 19:11:10.827592       1 controller_utils.go:1027] Waiting for caches to sync for endpoints config controller
I1209 19:11:10.827610       1 config.go:202] Starting service config controller
I1209 19:11:10.827623       1 controller_utils.go:1027] Waiting for caches to sync for service config controller
I1209 19:11:10.927680       1 controller_utils.go:1034] Caches are synced for endpoints config controller
I1209 19:11:10.927680       1 controller_utils.go:1034] Caches are synced for service config controller
I1209 19:11:10.927855       1 service.go:332] Adding new service port "kube-system/kube-dns:dns" at 172.20.0.10:53/UDP
I1209 19:11:10.927878       1 service.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 172.20.0.10:53/TCP
I1209 19:11:10.927892       1 service.go:332] Adding new service port "default/kubernetes:https" at 172.20.0.1:443/TCP
I1209 19:11:26.789303       1 proxier.go:675] Stale udp service kube-system/kube-dns:dns -> 172.20.0.10
I1209 19:13:36.342014       1 service.go:332] Adding new service port "kube-system/tiller-deploy:tiller" at 172.20.92.87:44134/TCP
I1209 19:13:48.697505       1 service.go:332] Adding new service port "logging/loki:http-metrics" at 172.20.133.108:3100/TCP
I1209 19:13:49.548808       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller-metrics:metrics" at 172.20.200.219:9913/TCP
I1209 19:13:49.572652       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-default-backend:http" at 172.20.203.143:80/TCP
I1209 19:13:49.597745       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller:http" at 172.20.159.244:80/TCP
I1209 19:13:49.597765       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller:https" at 172.20.159.244:443/TCP
I1209 19:13:49.618511       1 proxier.go:1464] Opened local port "nodePort for ingress-system/nginx-nginx-ingress-controller:https" (:30657/tcp)
I1209 19:13:49.618571       1 proxier.go:1464] Opened local port "nodePort for ingress-system/nginx-nginx-ingress-controller:http" (:31592/tcp)
I1209 19:13:49.728039       1 service.go:332] Adding new service port "kube-system/sealed-secrets:" at 172.20.176.113:8080/TCP
I1209 19:13:50.314227       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.128.244:7979/TCP
I1209 19:13:52.247970       1 service.go:334] Updating existing service port "ingress-system/nginx-nginx-ingress-controller:http" at 172.20.159.244:80/TCP
I1209 19:13:52.248004       1 service.go:334] Updating existing service port "ingress-system/nginx-nginx-ingress-controller:https" at 172.20.159.244:443/TCP
I1209 19:14:29.086155       1 service.go:332] Adding new service port "monitoring/prometheus-operator-prometheus:web" at 172.20.180.248:9090/TCP
I1209 19:14:29.104751       1 service.go:332] Adding new service port "monitoring/prometheus-operator-grafana:service" at 172.20.107.114:80/TCP
I1209 19:14:29.104773       1 service.go:332] Adding new service port "monitoring/prometheus-operator-kube-state-metrics:http" at 172.20.186.248:8080/TCP
I1209 19:14:29.122602       1 service.go:332] Adding new service port "monitoring/prometheus-operator-prometheus-node-exporter:metrics" at 172.20.51.213:9100/TCP
I1209 19:14:29.122623       1 service.go:332] Adding new service port "monitoring/prometheus-operator-alertmanager:web" at 172.20.233.102:9093/TCP
I1209 19:14:29.139959       1 service.go:332] Adding new service port "monitoring/prometheus-operator-operator:http" at 172.20.129.47:8080/TCP
I1209 19:14:29.139978       1 service.go:332] Adding new service port "monitoring/prometheus-operator-operator:https" at 172.20.129.47:443/TCP
I1209 19:18:34.259370       1 service.go:332] Adding new service port "cert-manager/cert-manager:" at 172.20.87.158:9402/TCP
I1209 19:18:34.278556       1 service.go:332] Adding new service port "cert-manager/cert-manager-webhook:https" at 172.20.218.185:443/TCP
I1209 19:18:55.217283       1 service.go:332] Adding new service port "kube-system/state-kube-state-metrics:http" at 172.20.52.45:8080/TCP
I1210 11:24:22.401630       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:25:41.353193       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.215.147:7979/TCP
I1210 11:28:36.660523       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:30:42.088375       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.58.6:7979/TCP
I1210 11:37:24.334300       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:37:28.665056       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.220.66:7979/TCP
I1210 11:44:19.400781       1 service.go:332] Adding new service port "kube-system/external-dns:http" at 172.20.34.195:7979/TCP
I1210 12:40:55.414093       1 service.go:357] Removing service port "kube-system/external-dns:http"
I1210 12:40:59.231535       1 service.go:332] Adding new service port "kube-system/external-dns:http" at 172.20.138.201:7979/TCP
==== END logs for container kube-proxy of pod kube-system/kube-proxy-j6bpg ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-k8txn ====
I1209 19:11:04.420925       1 flags.go:33] FLAG: --alsologtostderr="false"
I1209 19:11:04.420973       1 flags.go:33] FLAG: --bind-address="0.0.0.0"
I1209 19:11:04.420979       1 flags.go:33] FLAG: --cleanup="false"
I1209 19:11:04.420985       1 flags.go:33] FLAG: --cleanup-iptables="false"
I1209 19:11:04.420995       1 flags.go:33] FLAG: --cleanup-ipvs="true"
I1209 19:11:04.420998       1 flags.go:33] FLAG: --cluster-cidr=""
I1209 19:11:04.421003       1 flags.go:33] FLAG: --config="/var/lib/kube-proxy-config/config"
I1209 19:11:04.421008       1 flags.go:33] FLAG: --config-sync-period="15m0s"
I1209 19:11:04.421015       1 flags.go:33] FLAG: --conntrack-max="0"
I1209 19:11:04.421023       1 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I1209 19:11:04.421027       1 flags.go:33] FLAG: --conntrack-min="131072"
I1209 19:11:04.421032       1 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1209 19:11:04.421041       1 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1209 19:11:04.421046       1 flags.go:33] FLAG: --feature-gates=""
I1209 19:11:04.421055       1 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1209 19:11:04.421061       1 flags.go:33] FLAG: --healthz-port="10256"
I1209 19:11:04.421068       1 flags.go:33] FLAG: --help="false"
I1209 19:11:04.421073       1 flags.go:33] FLAG: --hostname-override=""
I1209 19:11:04.421081       1 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I1209 19:11:04.421085       1 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I1209 19:11:04.421093       1 flags.go:33] FLAG: --iptables-sync-period="30s"
I1209 19:11:04.421098       1 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I1209 19:11:04.421105       1 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I1209 19:11:04.421110       1 flags.go:33] FLAG: --ipvs-scheduler=""
I1209 19:11:04.421114       1 flags.go:33] FLAG: --ipvs-strict-arp="false"
I1209 19:11:04.421119       1 flags.go:33] FLAG: --ipvs-sync-period="30s"
I1209 19:11:04.421123       1 flags.go:33] FLAG: --kube-api-burst="10"
I1209 19:11:04.421130       1 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1209 19:11:04.421136       1 flags.go:33] FLAG: --kube-api-qps="5"
I1209 19:11:04.421143       1 flags.go:33] FLAG: --kubeconfig=""
I1209 19:11:04.421149       1 flags.go:33] FLAG: --log-backtrace-at=":0"
I1209 19:11:04.421156       1 flags.go:33] FLAG: --log-dir=""
I1209 19:11:04.421164       1 flags.go:33] FLAG: --log-file=""
I1209 19:11:04.421168       1 flags.go:33] FLAG: --log-flush-frequency="5s"
I1209 19:11:04.421173       1 flags.go:33] FLAG: --logtostderr="true"
I1209 19:11:04.421177       1 flags.go:33] FLAG: --masquerade-all="false"
I1209 19:11:04.421182       1 flags.go:33] FLAG: --master=""
I1209 19:11:04.421186       1 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I1209 19:11:04.421191       1 flags.go:33] FLAG: --metrics-port="10249"
I1209 19:11:04.421196       1 flags.go:33] FLAG: --nodeport-addresses="[]"
I1209 19:11:04.421206       1 flags.go:33] FLAG: --oom-score-adj="-999"
I1209 19:11:04.421210       1 flags.go:33] FLAG: --profiling="false"
I1209 19:11:04.421218       1 flags.go:33] FLAG: --proxy-mode=""
I1209 19:11:04.421225       1 flags.go:33] FLAG: --proxy-port-range=""
I1209 19:11:04.421231       1 flags.go:33] FLAG: --resource-container="/kube-proxy"
I1209 19:11:04.421238       1 flags.go:33] FLAG: --skip-headers="false"
I1209 19:11:04.421242       1 flags.go:33] FLAG: --stderrthreshold="2"
I1209 19:11:04.421248       1 flags.go:33] FLAG: --udp-timeout="250ms"
I1209 19:11:04.421253       1 flags.go:33] FLAG: --v="2"
I1209 19:11:04.421261       1 flags.go:33] FLAG: --version="false"
I1209 19:11:04.421268       1 flags.go:33] FLAG: --vmodule=""
I1209 19:11:04.421273       1 flags.go:33] FLAG: --write-config-to=""
I1209 19:11:04.422371       1 feature_gate.go:226] feature gates: &{map[]}
I1209 19:11:04.707994       1 server_others.go:146] Using iptables Proxier.
W1209 19:11:04.708102       1 proxier.go:319] clusterCIDR not specified, unable to distinguish between internal and external traffic
I1209 19:11:04.708238       1 iptables.go:200] Could not connect to D-Bus system bus: dial unix /var/run/dbus/system_bus_socket: connect: no such file or directory
I1209 19:11:04.708278       1 server.go:562] Version: v1.14.6
I1209 19:11:04.712386       1 server.go:578] Running in resource-only container "/kube-proxy"
I1209 19:11:04.713255       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I1209 19:11:04.713283       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I1209 19:11:04.713382       1 mount_linux.go:156] Detected OS without systemd
I1209 19:11:04.713538       1 conntrack.go:83] Setting conntrack hashsize to 32768
I1209 19:11:04.723508       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I1209 19:11:04.723566       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I1209 19:11:04.723695       1 config.go:102] Starting endpoints config controller
I1209 19:11:04.723720       1 controller_utils.go:1027] Waiting for caches to sync for endpoints config controller
I1209 19:11:04.723741       1 config.go:202] Starting service config controller
I1209 19:11:04.723755       1 controller_utils.go:1027] Waiting for caches to sync for service config controller
I1209 19:11:04.823869       1 controller_utils.go:1034] Caches are synced for service config controller
I1209 19:11:04.824069       1 proxier.go:661] Not syncing iptables until Services and Endpoints have been received from master
I1209 19:11:04.824111       1 controller_utils.go:1034] Caches are synced for endpoints config controller
I1209 19:11:04.824196       1 service.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 172.20.0.10:53/TCP
I1209 19:11:04.824231       1 service.go:332] Adding new service port "kube-system/kube-dns:dns" at 172.20.0.10:53/UDP
I1209 19:11:04.824240       1 service.go:332] Adding new service port "default/kubernetes:https" at 172.20.0.1:443/TCP
I1209 19:11:26.789545       1 proxier.go:675] Stale udp service kube-system/kube-dns:dns -> 172.20.0.10
I1209 19:13:36.341960       1 service.go:332] Adding new service port "kube-system/tiller-deploy:tiller" at 172.20.92.87:44134/TCP
I1209 19:13:48.697853       1 service.go:332] Adding new service port "logging/loki:http-metrics" at 172.20.133.108:3100/TCP
I1209 19:13:49.548906       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller-metrics:metrics" at 172.20.200.219:9913/TCP
I1209 19:13:49.577065       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-default-backend:http" at 172.20.203.143:80/TCP
I1209 19:13:49.577090       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller:http" at 172.20.159.244:80/TCP
I1209 19:13:49.577100       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller:https" at 172.20.159.244:443/TCP
I1209 19:13:49.603998       1 proxier.go:1464] Opened local port "nodePort for ingress-system/nginx-nginx-ingress-controller:http" (:31592/tcp)
I1209 19:13:49.604082       1 proxier.go:1464] Opened local port "nodePort for ingress-system/nginx-nginx-ingress-controller:https" (:30657/tcp)
I1209 19:13:49.728143       1 service.go:332] Adding new service port "kube-system/sealed-secrets:" at 172.20.176.113:8080/TCP
I1209 19:13:50.314651       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.128.244:7979/TCP
I1209 19:13:52.246396       1 service.go:334] Updating existing service port "ingress-system/nginx-nginx-ingress-controller:http" at 172.20.159.244:80/TCP
I1209 19:13:52.246422       1 service.go:334] Updating existing service port "ingress-system/nginx-nginx-ingress-controller:https" at 172.20.159.244:443/TCP
I1209 19:14:29.086382       1 service.go:332] Adding new service port "monitoring/prometheus-operator-prometheus:web" at 172.20.180.248:9090/TCP
I1209 19:14:29.106286       1 service.go:332] Adding new service port "monitoring/prometheus-operator-grafana:service" at 172.20.107.114:80/TCP
I1209 19:14:29.106309       1 service.go:332] Adding new service port "monitoring/prometheus-operator-kube-state-metrics:http" at 172.20.186.248:8080/TCP
I1209 19:14:29.126063       1 service.go:332] Adding new service port "monitoring/prometheus-operator-prometheus-node-exporter:metrics" at 172.20.51.213:9100/TCP
I1209 19:14:29.126085       1 service.go:332] Adding new service port "monitoring/prometheus-operator-alertmanager:web" at 172.20.233.102:9093/TCP
I1209 19:14:29.146946       1 service.go:332] Adding new service port "monitoring/prometheus-operator-operator:https" at 172.20.129.47:443/TCP
I1209 19:14:29.146967       1 service.go:332] Adding new service port "monitoring/prometheus-operator-operator:http" at 172.20.129.47:8080/TCP
I1209 19:18:34.259525       1 service.go:332] Adding new service port "cert-manager/cert-manager:" at 172.20.87.158:9402/TCP
I1209 19:18:34.293105       1 service.go:332] Adding new service port "cert-manager/cert-manager-webhook:https" at 172.20.218.185:443/TCP
I1209 19:18:55.217436       1 service.go:332] Adding new service port "kube-system/state-kube-state-metrics:http" at 172.20.52.45:8080/TCP
I1210 11:24:22.401968       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:25:41.353186       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.215.147:7979/TCP
I1210 11:28:36.660517       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:30:42.088803       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.58.6:7979/TCP
I1210 11:37:24.334631       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:37:28.664968       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.220.66:7979/TCP
I1210 11:44:19.400912       1 service.go:332] Adding new service port "kube-system/external-dns:http" at 172.20.34.195:7979/TCP
I1210 12:40:55.413953       1 service.go:357] Removing service port "kube-system/external-dns:http"
I1210 12:40:59.231459       1 service.go:332] Adding new service port "kube-system/external-dns:http" at 172.20.138.201:7979/TCP
==== END logs for container kube-proxy of pod kube-system/kube-proxy-k8txn ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-nhfck ====
I1209 19:11:06.570850       1 flags.go:33] FLAG: --alsologtostderr="false"
I1209 19:11:06.570902       1 flags.go:33] FLAG: --bind-address="0.0.0.0"
I1209 19:11:06.570907       1 flags.go:33] FLAG: --cleanup="false"
I1209 19:11:06.570913       1 flags.go:33] FLAG: --cleanup-iptables="false"
I1209 19:11:06.570921       1 flags.go:33] FLAG: --cleanup-ipvs="true"
I1209 19:11:06.570924       1 flags.go:33] FLAG: --cluster-cidr=""
I1209 19:11:06.570928       1 flags.go:33] FLAG: --config="/var/lib/kube-proxy-config/config"
I1209 19:11:06.570933       1 flags.go:33] FLAG: --config-sync-period="15m0s"
I1209 19:11:06.570939       1 flags.go:33] FLAG: --conntrack-max="0"
I1209 19:11:06.570946       1 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I1209 19:11:06.570951       1 flags.go:33] FLAG: --conntrack-min="131072"
I1209 19:11:06.570955       1 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1209 19:11:06.570960       1 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1209 19:11:06.570965       1 flags.go:33] FLAG: --feature-gates=""
I1209 19:11:06.570973       1 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1209 19:11:06.570978       1 flags.go:33] FLAG: --healthz-port="10256"
I1209 19:11:06.570982       1 flags.go:33] FLAG: --help="false"
I1209 19:11:06.570987       1 flags.go:33] FLAG: --hostname-override=""
I1209 19:11:06.570991       1 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I1209 19:11:06.570996       1 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I1209 19:11:06.571003       1 flags.go:33] FLAG: --iptables-sync-period="30s"
I1209 19:11:06.571011       1 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I1209 19:11:06.571023       1 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I1209 19:11:06.571028       1 flags.go:33] FLAG: --ipvs-scheduler=""
I1209 19:11:06.571032       1 flags.go:33] FLAG: --ipvs-strict-arp="false"
I1209 19:11:06.571037       1 flags.go:33] FLAG: --ipvs-sync-period="30s"
I1209 19:11:06.571041       1 flags.go:33] FLAG: --kube-api-burst="10"
I1209 19:11:06.571046       1 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1209 19:11:06.571051       1 flags.go:33] FLAG: --kube-api-qps="5"
I1209 19:11:06.571059       1 flags.go:33] FLAG: --kubeconfig=""
I1209 19:11:06.571063       1 flags.go:33] FLAG: --log-backtrace-at=":0"
I1209 19:11:06.571071       1 flags.go:33] FLAG: --log-dir=""
I1209 19:11:06.571076       1 flags.go:33] FLAG: --log-file=""
I1209 19:11:06.571080       1 flags.go:33] FLAG: --log-flush-frequency="5s"
I1209 19:11:06.571085       1 flags.go:33] FLAG: --logtostderr="true"
I1209 19:11:06.571090       1 flags.go:33] FLAG: --masquerade-all="false"
I1209 19:11:06.571094       1 flags.go:33] FLAG: --master=""
I1209 19:11:06.571099       1 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I1209 19:11:06.571104       1 flags.go:33] FLAG: --metrics-port="10249"
I1209 19:11:06.571108       1 flags.go:33] FLAG: --nodeport-addresses="[]"
I1209 19:11:06.571114       1 flags.go:33] FLAG: --oom-score-adj="-999"
I1209 19:11:06.571118       1 flags.go:33] FLAG: --profiling="false"
I1209 19:11:06.571123       1 flags.go:33] FLAG: --proxy-mode=""
I1209 19:11:06.571133       1 flags.go:33] FLAG: --proxy-port-range=""
I1209 19:11:06.571139       1 flags.go:33] FLAG: --resource-container="/kube-proxy"
I1209 19:11:06.571144       1 flags.go:33] FLAG: --skip-headers="false"
I1209 19:11:06.571149       1 flags.go:33] FLAG: --stderrthreshold="2"
I1209 19:11:06.571153       1 flags.go:33] FLAG: --udp-timeout="250ms"
I1209 19:11:06.571158       1 flags.go:33] FLAG: --v="2"
I1209 19:11:06.571162       1 flags.go:33] FLAG: --version="false"
I1209 19:11:06.571170       1 flags.go:33] FLAG: --vmodule=""
I1209 19:11:06.571175       1 flags.go:33] FLAG: --write-config-to=""
I1209 19:11:06.572128       1 feature_gate.go:226] feature gates: &{map[]}
I1209 19:11:26.901576       1 server_others.go:146] Using iptables Proxier.
W1209 19:11:26.901688       1 proxier.go:319] clusterCIDR not specified, unable to distinguish between internal and external traffic
I1209 19:11:26.901855       1 iptables.go:200] Could not connect to D-Bus system bus: dial unix /var/run/dbus/system_bus_socket: connect: no such file or directory
I1209 19:11:26.902576       1 server.go:562] Version: v1.14.6
I1209 19:11:26.908691       1 server.go:578] Running in resource-only container "/kube-proxy"
I1209 19:11:26.909243       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I1209 19:11:26.909272       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I1209 19:11:26.909376       1 mount_linux.go:156] Detected OS without systemd
I1209 19:11:26.909559       1 conntrack.go:83] Setting conntrack hashsize to 32768
I1209 19:11:26.922515       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I1209 19:11:26.922569       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I1209 19:11:26.922689       1 config.go:102] Starting endpoints config controller
I1209 19:11:26.922724       1 controller_utils.go:1027] Waiting for caches to sync for endpoints config controller
I1209 19:11:26.922739       1 config.go:202] Starting service config controller
I1209 19:11:26.922748       1 controller_utils.go:1027] Waiting for caches to sync for service config controller
I1209 19:11:27.022843       1 controller_utils.go:1034] Caches are synced for endpoints config controller
I1209 19:11:27.022852       1 controller_utils.go:1034] Caches are synced for service config controller
I1209 19:11:27.023033       1 proxier.go:661] Not syncing iptables until Services and Endpoints have been received from master
I1209 19:11:27.023135       1 service.go:332] Adding new service port "kube-system/kube-dns:dns" at 172.20.0.10:53/UDP
I1209 19:11:27.023171       1 service.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 172.20.0.10:53/TCP
I1209 19:11:27.023186       1 service.go:332] Adding new service port "default/kubernetes:https" at 172.20.0.1:443/TCP
I1209 19:11:27.023282       1 proxier.go:675] Stale udp service kube-system/kube-dns:dns -> 172.20.0.10
I1209 19:13:36.341699       1 service.go:332] Adding new service port "kube-system/tiller-deploy:tiller" at 172.20.92.87:44134/TCP
I1209 19:13:48.697347       1 service.go:332] Adding new service port "logging/loki:http-metrics" at 172.20.133.108:3100/TCP
I1209 19:13:49.549432       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller-metrics:metrics" at 172.20.200.219:9913/TCP
I1209 19:13:49.572958       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-default-backend:http" at 172.20.203.143:80/TCP
I1209 19:13:49.572981       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller:http" at 172.20.159.244:80/TCP
I1209 19:13:49.572993       1 service.go:332] Adding new service port "ingress-system/nginx-nginx-ingress-controller:https" at 172.20.159.244:443/TCP
I1209 19:13:49.593426       1 proxier.go:1464] Opened local port "nodePort for ingress-system/nginx-nginx-ingress-controller:https" (:30657/tcp)
I1209 19:13:49.593494       1 proxier.go:1464] Opened local port "nodePort for ingress-system/nginx-nginx-ingress-controller:http" (:31592/tcp)
I1209 19:13:49.727625       1 service.go:332] Adding new service port "kube-system/sealed-secrets:" at 172.20.176.113:8080/TCP
I1209 19:13:50.313743       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.128.244:7979/TCP
I1209 19:13:52.246309       1 service.go:334] Updating existing service port "ingress-system/nginx-nginx-ingress-controller:http" at 172.20.159.244:80/TCP
I1209 19:13:52.246332       1 service.go:334] Updating existing service port "ingress-system/nginx-nginx-ingress-controller:https" at 172.20.159.244:443/TCP
I1209 19:14:29.085951       1 service.go:332] Adding new service port "monitoring/prometheus-operator-prometheus:web" at 172.20.180.248:9090/TCP
I1209 19:14:29.104495       1 service.go:332] Adding new service port "monitoring/prometheus-operator-grafana:service" at 172.20.107.114:80/TCP
I1209 19:14:29.104516       1 service.go:332] Adding new service port "monitoring/prometheus-operator-kube-state-metrics:http" at 172.20.186.248:8080/TCP
I1209 19:14:29.121777       1 service.go:332] Adding new service port "monitoring/prometheus-operator-alertmanager:web" at 172.20.233.102:9093/TCP
I1209 19:14:29.121806       1 service.go:332] Adding new service port "monitoring/prometheus-operator-prometheus-node-exporter:metrics" at 172.20.51.213:9100/TCP
I1209 19:14:29.138765       1 service.go:332] Adding new service port "monitoring/prometheus-operator-operator:http" at 172.20.129.47:8080/TCP
I1209 19:14:29.138782       1 service.go:332] Adding new service port "monitoring/prometheus-operator-operator:https" at 172.20.129.47:443/TCP
I1209 19:18:34.259625       1 service.go:332] Adding new service port "cert-manager/cert-manager:" at 172.20.87.158:9402/TCP
I1209 19:18:34.284766       1 service.go:332] Adding new service port "cert-manager/cert-manager-webhook:https" at 172.20.218.185:443/TCP
I1209 19:18:55.216938       1 service.go:332] Adding new service port "kube-system/state-kube-state-metrics:http" at 172.20.52.45:8080/TCP
I1210 11:24:22.401750       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:25:41.353057       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.215.147:7979/TCP
I1210 11:28:36.660717       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:30:42.088421       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.58.6:7979/TCP
I1210 11:37:24.334268       1 service.go:357] Removing service port "kube-system/dns-external-dns:http"
I1210 11:37:28.665157       1 service.go:332] Adding new service port "kube-system/dns-external-dns:http" at 172.20.220.66:7979/TCP
I1210 11:44:19.400914       1 service.go:332] Adding new service port "kube-system/external-dns:http" at 172.20.34.195:7979/TCP
I1210 12:40:55.413606       1 service.go:357] Removing service port "kube-system/external-dns:http"
I1210 12:40:59.231406       1 service.go:332] Adding new service port "kube-system/external-dns:http" at 172.20.138.201:7979/TCP
==== END logs for container kube-proxy of pod kube-system/kube-proxy-nhfck ====
==== START logs for container sealed-secrets of pod kube-system/sealed-secrets-556664b9fd-nh88k ====
2019/12/09 19:13:55 Starting sealed-secrets controller version: v0.8.3
2019/12/09 19:13:55 Searching for existing private keys
2019/12/09 19:13:56 New key written to kube-system/sealed-secrets-keynfqrd
2019/12/09 19:13:56 Certificate is 
-----BEGIN CERTIFICATE-----
MIIErTCCApWgAwIBAgIQRRj+Q/HfqDyWFaxEKFPrXTANBgkqhkiG9w0BAQsFADAA
MB4XDTE5MTIwOTE5MTM1NloXDTI5MTIwNjE5MTM1NlowADCCAiIwDQYJKoZIhvcN
AQEBBQADggIPADCCAgoCggIBAPuaY5rIKrGaRCTrG4OmSvHTDgnM4bn4m7oUwXf9
Ua+Nctu77SQjT5hwS2Tk4shNp+ZOPxnE8iuecwGT6GDbana3U2bFHcJfWAf6KSNf
okrO4ZTTkAKfDJQKfQ/JhUe9Ci0/D8PmmbNWYS3IuxYvObMxxVeaQNqq1qpqJWqW
cM/sQCkR0CnnJ2WTvtcdTAi3H3oeyduvNHGyy0zM6iL/CIQMMnAefGqknXyVHpYF
xXAr6yUSTEMR2C/dAZbGmlbkWCvyeLGJv7H7JeMT0zdBlTqqzWOtxawLuG/jRd6l
YfZCN8pbu0zzLEDi6qQPcO0Q1Ceoi5M4ePSRH7PyKZBwYwOeXIZAGD5pxzO1Uhtb
fb0pV6SmYTzAAYz3gU1n3clIldkzLobT1xRPTFF2ymGZ+fYD3qoY+vPo3H6JahBF
GFST2EvG4V0OYMIyGVh7vrp9JgtBS3TRdRyd+gjX28t0JhIzg1KQEDjh1Zn0ivXk
XvNDN49bedVwYu7SZbFq3J3ZJK3rY/K2mjT6cPj/aP+lV7G12f26rYkmpkRXE9hX
z4Sg8Vunc68X+QzYXMq3G7mRHsBNcoehI8w9oduK2PlGv6IJFIv2hvQQYZ+FqDy7
pDjVkNB0fADUFxpm27PdgMQxv4dVl3KKLkSJ6P3GHPVm52dIBOoqKmcMh5e9tkLD
NtEpAgMBAAGjIzAhMA4GA1UdDwEB/wQEAwIAATAPBgNVHRMBAf8EBTADAQH/MA0G
CSqGSIb3DQEBCwUAA4ICAQCBYZkkXUjWzTKwxX5EywrhvzQ1OB/ipdmlSsmJW+2i
fxAqYhNVKjo0cH/VH3U805xafcuWK9AX/83K/B3TCHw1J6HREjpc+fq9BV2k15ia
u0UbPj8dgIGTdkjvZaKgLIPIU1BHQ9ojGt4TZcFGVsWsvaDokjn08nbW6TAYQoIR
BgS1cVYBnq3Lztv9mI26QZ4Y/d06Md/fYwN8SI0/Jt7zmqSp1AM3B51mCMmKrqZ0
clFi2Ps358Xvz7c4vzJJoXXhvOWeK5hMvuMu+Qu4i4brQNoShiOLWuJG6WU2EJbk
xW1NBmhwOYfXtXt8ziJgjY2c29m9jy9rESZAVZNdofeAMdmbs5tu7M15ZNF7jPTc
UjSYe3hIj7zMLa8TV4P2XPglYEWvEN8Jcv0x0jo6r9xIVCbhh2qVGVVQeKhpvbxN
NrgIc9QgWwVmudzFj21UCqKPrA/RSgF8dKwq++mNZBtt27+NcGLpuhnGhi+lXgE+
w2m7wREAv0DHZ+LthWmPecslSVzJJ9jICDJWBF1eOzQw/Mp+jjY+B4oinkAJHbF+
RV9z33y5yx9DhIOJlPmsD64gB0pydjVe2thLqJ50qtddWGMgdxcCt3oECVBFJ2YT
FUIMJTvR4fGkHlpTSOH0iiCcApcC6wq9dwe0RtHTez3lPV0nKEC142t2rd7nbRnl
2w==
-----END CERTIFICATE-----

2019/12/09 19:13:56 HTTP server serving on :8080
==== END logs for container sealed-secrets of pod kube-system/sealed-secrets-556664b9fd-nh88k ====
==== START logs for container kube-state-metrics of pod kube-system/state-kube-state-metrics-7c76fb9f9b-r4kp5 ====
I1209 19:19:00.558702       1 main.go:89] Using collectors certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,namespaces,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses
I1209 19:19:00.558751       1 main.go:98] Using all namespace
I1209 19:19:00.558760       1 main.go:139] metric white-blacklisting: blacklisting the following items: 
W1209 19:19:00.558776       1 client_config.go:541] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
I1209 19:19:00.559975       1 main.go:184] Testing communication with server
I1209 19:19:00.565789       1 main.go:189] Running with Kubernetes cluster version: v1.14+. git version: v1.14.8-eks-b8860f. git tree state: clean. commit: b8860f6c40640897e52c143f1b9f011a503d6e46. platform: linux/amd64
I1209 19:19:00.565907       1 main.go:191] Communication with server successful
I1209 19:19:00.566091       1 main.go:225] Starting metrics server: 0.0.0.0:8080
I1209 19:19:00.566304       1 metrics_handler.go:96] Autosharding disabled
I1209 19:19:00.566142       1 main.go:200] Starting kube-state-metrics self metrics server: 0.0.0.0:8081
I1209 19:19:00.566831       1 builder.go:144] Active collectors: certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,namespaces,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses
W1209 20:01:46.773933       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v2beta1.HorizontalPodAutoscaler ended with: too old resource version: 576 (16923)
W1209 20:07:35.993203       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1beta1.CronJob ended with: too old resource version: 576 (17995)
W1209 20:24:16.726991       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.ReplicationController ended with: too old resource version: 576 (21061)
W1209 20:42:46.760069       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.PersistentVolume ended with: too old resource version: 576 (24456)
W1209 21:15:26.054750       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.PersistentVolume ended with: too old resource version: 24456 (30454)
W1209 21:33:26.048996       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.Job ended with: too old resource version: 2163 (33759)
W1209 21:50:56.792772       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.LimitRange ended with: too old resource version: 576 (36971)
W1209 22:11:26.750458       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.StatefulSet ended with: too old resource version: 2061 (40735)
W1209 22:13:56.038576       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.PersistentVolumeClaim ended with: too old resource version: 576 (41192)
W1209 22:49:16.023049       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v2beta1.HorizontalPodAutoscaler ended with: too old resource version: 16923 (47678)
W1209 23:25:56.073622       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1beta1.PodDisruptionBudget ended with: too old resource version: 576 (54402)
W1210 00:54:46.750056       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.ResourceQuota ended with: too old resource version: 576 (70709)
W1210 01:11:26.032181       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1beta1.Ingress ended with: too old resource version: 2065 (73768)
W1210 01:25:16.059018       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.Secret ended with: too old resource version: 13515 (76305)
W1210 01:43:36.024259       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1beta1.Ingress ended with: too old resource version: 73768 (79671)
W1210 03:31:26.708967       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.ResourceQuota ended with: too old resource version: 70709 (99460)
W1210 04:50:56.094329       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.PersistentVolume ended with: too old resource version: 30454 (114050)
W1210 06:08:06.948071       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.StorageClass ended with: too old resource version: 576 (128216)
W1210 06:59:17.044726       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.StorageClass ended with: too old resource version: 128216 (137606)
W1210 10:36:47.011716       1 reflector.go:302] k8s.io/kube-state-metrics/internal/store/builder.go:314: watch of *v1.Job ended with: too old resource version: 33759 (177523)
==== END logs for container kube-state-metrics of pod kube-system/state-kube-state-metrics-7c76fb9f9b-r4kp5 ====
==== START logs for container tiller of pod kube-system/tiller-deploy-586965d498-5ts64 ====
[main] 2019/12/10 11:23:45 Starting Tiller v2.16.1 (tls=false)
[main] 2019/12/10 11:23:45 GRPC listening on :44134
[main] 2019/12/10 11:23:45 Probes listening on :44135
[main] 2019/12/10 11:23:45 Storage driver is ConfigMap
[main] 2019/12/10 11:23:45 Max history per release is 0
[storage] 2019/12/10 11:23:59 listing all releases with filter
[storage] 2019/12/10 11:24:22 getting release history for "dns"
[tiller] 2019/12/10 11:24:22 uninstall: Deleting dns
[tiller] 2019/12/10 11:24:22 executing 0 pre-delete hooks for dns
[tiller] 2019/12/10 11:24:22 hooks complete for pre-delete dns
[storage] 2019/12/10 11:24:22 updating release "dns.v2"
[kube] 2019/12/10 11:24:22 Starting delete for "dns-external-dns" Service
[kube] 2019/12/10 11:24:22 Starting delete for "dns-external-dns" Deployment
[kube] 2019/12/10 11:24:22 Starting delete for "dns-external-dns" ClusterRoleBinding
[kube] 2019/12/10 11:24:22 Starting delete for "dns-external-dns" ClusterRole
[kube] 2019/12/10 11:24:22 Starting delete for "dns-external-dns" ServiceAccount
[kube] 2019/12/10 11:24:22 Starting delete for "dns-external-dns" Secret
[tiller] 2019/12/10 11:24:22 executing 0 post-delete hooks for dns
[tiller] 2019/12/10 11:24:22 hooks complete for post-delete dns
[tiller] 2019/12/10 11:24:22 purge requested for dns
[storage] 2019/12/10 11:24:22 deleting release "dns.v1"
[storage] 2019/12/10 11:24:22 deleting release "dns.v2"
[storage] 2019/12/10 11:25:03 getting last revision of "loki"
[storage] 2019/12/10 11:25:03 getting release history for "loki"
[storage] 2019/12/10 11:25:06 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:25:06 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:25:07 getting last revision of "nginx"
[storage] 2019/12/10 11:25:07 getting release history for "nginx"
[storage] 2019/12/10 11:25:07 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:25:07 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:25:07 getting last revision of "dns"
[storage] 2019/12/10 11:25:07 getting release history for "dns"
[storage] 2019/12/10 11:25:08 getting last revision of "issuers"
[storage] 2019/12/10 11:25:08 getting release history for "issuers"
[storage] 2019/12/10 11:25:08 getting last revision of "loki"
[storage] 2019/12/10 11:25:08 getting release history for "loki"
[storage] 2019/12/10 11:25:09 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:25:09 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:25:09 getting last revision of "nginx"
[storage] 2019/12/10 11:25:09 getting release history for "nginx"
[storage] 2019/12/10 11:25:09 getting last revision of "issuers"
[storage] 2019/12/10 11:25:09 getting release history for "issuers"
[storage] 2019/12/10 11:25:11 getting last revision of "cert-manager"
[storage] 2019/12/10 11:25:11 getting release history for "cert-manager"
[storage] 2019/12/10 11:25:11 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:25:11 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:25:12 getting last revision of "cert-manager"
[storage] 2019/12/10 11:25:12 getting release history for "cert-manager"
[storage] 2019/12/10 11:25:15 getting last revision of "state"
[storage] 2019/12/10 11:25:15 getting release history for "state"
[storage] 2019/12/10 11:25:17 getting last revision of "state"
[storage] 2019/12/10 11:25:17 getting release history for "state"
[storage] 2019/12/10 11:25:38 getting last revision of "dns"
[storage] 2019/12/10 11:25:38 getting release history for "dns"
[tiller] 2019/12/10 11:25:41 preparing install for dns
[storage] 2019/12/10 11:25:41 getting release history for "dns"
[tiller] 2019/12/10 11:25:41 rendering external-dns chart using values
2019/12/10 11:25:41 info: manifest "external-dns/templates/psp.yaml" is empty. Skipping.
2019/12/10 11:25:41 info: manifest "external-dns/templates/psp-clusterrolebinding.yaml" is empty. Skipping.
2019/12/10 11:25:41 info: manifest "external-dns/templates/psp-clusterrole.yaml" is empty. Skipping.
2019/12/10 11:25:41 info: manifest "external-dns/templates/crd.yaml" is empty. Skipping.
2019/12/10 11:25:41 info: manifest "external-dns/templates/configmap.yaml" is empty. Skipping.
[tiller] 2019/12/10 11:25:41 performing install for dns
[tiller] 2019/12/10 11:25:41 executing 0 crd-install hooks for dns
[tiller] 2019/12/10 11:25:41 hooks complete for crd-install dns
[tiller] 2019/12/10 11:25:41 executing 0 pre-install hooks for dns
[tiller] 2019/12/10 11:25:41 hooks complete for pre-install dns
[storage] 2019/12/10 11:25:41 getting release history for "dns"
[storage] 2019/12/10 11:25:41 creating release "dns.v1"
[kube] 2019/12/10 11:25:41 building resources from manifest
[kube] 2019/12/10 11:25:41 creating 6 resource(s)
[kube] 2019/12/10 11:25:41 beginning wait for 6 resources with timeout of 5m0s
[kube] 2019/12/10 11:25:43 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:25:45 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:25:47 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:25:49 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:25:51 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:25:53 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:25:55 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:25:57 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:25:59 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:01 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:03 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:05 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:07 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:09 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:11 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:13 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:15 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:17 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:19 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:21 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:23 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:25 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:27 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:29 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:31 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:33 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:35 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:37 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:39 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:41 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:43 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:45 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:47 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:49 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:51 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:53 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:55 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:57 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:26:59 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:01 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:03 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:05 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:07 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:09 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:11 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:13 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:15 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:17 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:19 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:21 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:23 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:25 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:27 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:29 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:31 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:33 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:35 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:37 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:39 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:41 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:43 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:45 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:47 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:49 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:51 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:53 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:55 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:57 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:27:59 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:01 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:03 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:05 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:07 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:09 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:11 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:13 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:15 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:17 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:19 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:21 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:23 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:25 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:27 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:29 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:31 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:33 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:28:35 Deployment is not ready: kube-system/dns-external-dns
[storage] 2019/12/10 11:28:36 getting release history for "dns"
[tiller] 2019/12/10 11:28:36 uninstall: Deleting dns
[tiller] 2019/12/10 11:28:36 executing 0 pre-delete hooks for dns
[tiller] 2019/12/10 11:28:36 hooks complete for pre-delete dns
[storage] 2019/12/10 11:28:36 updating release "dns.v1"
[kube] 2019/12/10 11:28:36 Starting delete for "dns-external-dns" Service
[kube] 2019/12/10 11:28:36 Starting delete for "dns-external-dns" Deployment
[kube] 2019/12/10 11:28:36 Starting delete for "dns-external-dns" ClusterRoleBinding
[kube] 2019/12/10 11:28:36 Starting delete for "dns-external-dns" ClusterRole
[kube] 2019/12/10 11:28:36 Starting delete for "dns-external-dns" ServiceAccount
[kube] 2019/12/10 11:28:36 Starting delete for "dns-external-dns" Secret
[tiller] 2019/12/10 11:28:36 executing 0 post-delete hooks for dns
[tiller] 2019/12/10 11:28:36 hooks complete for post-delete dns
[tiller] 2019/12/10 11:28:36 purge requested for dns
[storage] 2019/12/10 11:28:36 deleting release "dns.v1"
[tiller] 2019/12/10 11:28:37 warning: Release "dns" failed: services "dns-external-dns" not found
[storage] 2019/12/10 11:28:37 updating release "dns.v1"
[storage/driver] 2019/12/10 11:28:37 update: failed to update: configmaps "dns.v1" not found
[tiller] 2019/12/10 11:28:37 warning: Failed to update release dns: configmaps "dns.v1" not found
[tiller] 2019/12/10 11:28:37 failed install perform step: release dns failed: services "dns-external-dns" not found
[storage] 2019/12/10 11:28:42 listing all releases with filter
[storage] 2019/12/10 11:29:36 getting last revision of "loki"
[storage] 2019/12/10 11:29:36 getting release history for "loki"
[storage] 2019/12/10 11:29:36 getting last revision of "nginx"
[storage] 2019/12/10 11:29:36 getting release history for "nginx"
[storage] 2019/12/10 11:29:37 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:29:37 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:29:37 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:29:37 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:29:37 getting last revision of "issuers"
[storage] 2019/12/10 11:29:37 getting release history for "issuers"
[storage] 2019/12/10 11:29:37 getting last revision of "loki"
[storage] 2019/12/10 11:29:37 getting release history for "loki"
[storage] 2019/12/10 11:29:38 getting last revision of "nginx"
[storage] 2019/12/10 11:29:38 getting release history for "nginx"
[storage] 2019/12/10 11:29:38 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:29:38 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:29:38 listing all releases with filter
[storage] 2019/12/10 11:29:39 getting last revision of "issuers"
[storage] 2019/12/10 11:29:39 getting release history for "issuers"
[storage] 2019/12/10 11:29:40 getting last revision of "cert-manager"
[storage] 2019/12/10 11:29:40 getting release history for "cert-manager"
[storage] 2019/12/10 11:29:40 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:29:40 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:29:41 getting last revision of "cert-manager"
[storage] 2019/12/10 11:29:41 getting release history for "cert-manager"
[storage] 2019/12/10 11:29:43 getting last revision of "state"
[storage] 2019/12/10 11:29:43 getting release history for "state"
[storage] 2019/12/10 11:29:44 getting last revision of "state"
[storage] 2019/12/10 11:29:44 getting release history for "state"
[storage] 2019/12/10 11:30:38 getting last revision of "dns"
[storage] 2019/12/10 11:30:38 getting release history for "dns"
[tiller] 2019/12/10 11:30:41 preparing install for dns
[storage] 2019/12/10 11:30:41 getting release history for "dns"
[tiller] 2019/12/10 11:30:42 rendering external-dns chart using values
2019/12/10 11:30:42 info: manifest "external-dns/templates/psp-clusterrole.yaml" is empty. Skipping.
2019/12/10 11:30:42 info: manifest "external-dns/templates/crd.yaml" is empty. Skipping.
2019/12/10 11:30:42 info: manifest "external-dns/templates/psp-clusterrolebinding.yaml" is empty. Skipping.
2019/12/10 11:30:42 info: manifest "external-dns/templates/psp.yaml" is empty. Skipping.
2019/12/10 11:30:42 info: manifest "external-dns/templates/configmap.yaml" is empty. Skipping.
[tiller] 2019/12/10 11:30:42 performing install for dns
[tiller] 2019/12/10 11:30:42 executing 0 crd-install hooks for dns
[tiller] 2019/12/10 11:30:42 hooks complete for crd-install dns
[tiller] 2019/12/10 11:30:42 executing 0 pre-install hooks for dns
[tiller] 2019/12/10 11:30:42 hooks complete for pre-install dns
[storage] 2019/12/10 11:30:42 getting release history for "dns"
[storage] 2019/12/10 11:30:42 creating release "dns.v1"
[kube] 2019/12/10 11:30:42 building resources from manifest
[kube] 2019/12/10 11:30:42 creating 6 resource(s)
[kube] 2019/12/10 11:30:42 beginning wait for 6 resources with timeout of 5m0s
[kube] 2019/12/10 11:30:44 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:30:46 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:30:48 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:30:50 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:30:52 Deployment is not ready: kube-system/dns-external-dns
[storage] 2019/12/10 11:30:52 listing all releases with filter
[kube] 2019/12/10 11:30:54 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:30:56 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:30:58 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:00 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:02 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:04 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:06 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:08 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:10 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:12 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:14 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:16 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:18 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:20 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:22 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:24 Deployment is not ready: kube-system/dns-external-dns
[storage] 2019/12/10 11:31:24 listing all releases with filter
[kube] 2019/12/10 11:31:26 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:28 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:30 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:32 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:34 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:36 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:38 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:40 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:42 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:44 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:46 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:48 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:50 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:52 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:54 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:56 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:31:58 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:00 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:02 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:04 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:06 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:08 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:10 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:12 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:14 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:16 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:18 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:20 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:22 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:24 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:26 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:28 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:30 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:32 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:34 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:36 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:38 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:40 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:42 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:44 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:46 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:48 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:50 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:52 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:54 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:56 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:32:58 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:00 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:02 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:04 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:06 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:08 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:10 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:12 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:14 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:16 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:18 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:20 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:22 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:24 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:26 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:28 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:30 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:32 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:34 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:36 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:38 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:40 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:42 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:44 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:46 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:48 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:50 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:52 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:54 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:56 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:33:58 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:00 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:02 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:04 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:06 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:08 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:10 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:12 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:14 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:16 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:18 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:20 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:22 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:24 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:26 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:28 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:30 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:32 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:34 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:36 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:38 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:40 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:42 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:44 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:46 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:48 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:50 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:52 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:54 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:56 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:34:58 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:00 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:02 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:04 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:06 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:08 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:10 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:12 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:14 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:16 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:18 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:20 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:22 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:24 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:26 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:28 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:30 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:32 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:34 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:36 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:38 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:40 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:42 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:35:42 Deployment is not ready: kube-system/dns-external-dns
[tiller] 2019/12/10 11:35:42 warning: Release "dns" failed: timed out waiting for the condition
[storage] 2019/12/10 11:35:42 updating release "dns.v1"
[tiller] 2019/12/10 11:35:42 failed install perform step: release dns failed: timed out waiting for the condition
[storage] 2019/12/10 11:36:42 getting last revision of "loki"
[storage] 2019/12/10 11:36:42 getting release history for "loki"
[storage] 2019/12/10 11:36:43 getting last revision of "nginx"
[storage] 2019/12/10 11:36:43 getting release history for "nginx"
[storage] 2019/12/10 11:36:44 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:36:44 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:36:45 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:36:45 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:36:45 getting last revision of "issuers"
[storage] 2019/12/10 11:36:45 getting release history for "issuers"
[storage] 2019/12/10 11:36:45 getting last revision of "loki"
[storage] 2019/12/10 11:36:45 getting release history for "loki"
[storage] 2019/12/10 11:36:46 getting last revision of "nginx"
[storage] 2019/12/10 11:36:46 getting release history for "nginx"
[storage] 2019/12/10 11:36:47 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:36:47 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:36:47 getting last revision of "issuers"
[storage] 2019/12/10 11:36:47 getting release history for "issuers"
[storage] 2019/12/10 11:36:49 getting last revision of "cert-manager"
[storage] 2019/12/10 11:36:49 getting release history for "cert-manager"
[storage] 2019/12/10 11:36:49 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:36:49 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:36:50 getting last revision of "cert-manager"
[storage] 2019/12/10 11:36:50 getting release history for "cert-manager"
[storage] 2019/12/10 11:36:54 getting last revision of "state"
[storage] 2019/12/10 11:36:54 getting release history for "state"
[storage] 2019/12/10 11:36:55 getting last revision of "state"
[storage] 2019/12/10 11:36:55 getting release history for "state"
[storage] 2019/12/10 11:37:22 getting last revision of "dns"
[storage] 2019/12/10 11:37:22 getting release history for "dns"
[storage] 2019/12/10 11:37:24 getting release history for "dns"
[tiller] 2019/12/10 11:37:24 uninstall: Deleting dns
[tiller] 2019/12/10 11:37:24 executing 0 pre-delete hooks for dns
[tiller] 2019/12/10 11:37:24 hooks complete for pre-delete dns
[storage] 2019/12/10 11:37:24 updating release "dns.v1"
[kube] 2019/12/10 11:37:24 Starting delete for "dns-external-dns" Service
[kube] 2019/12/10 11:37:24 Starting delete for "dns-external-dns" Deployment
[kube] 2019/12/10 11:37:24 Starting delete for "dns-external-dns" ClusterRoleBinding
[kube] 2019/12/10 11:37:24 Starting delete for "dns-external-dns" ClusterRole
[kube] 2019/12/10 11:37:24 Starting delete for "dns-external-dns" ServiceAccount
[kube] 2019/12/10 11:37:24 Starting delete for "dns-external-dns" Secret
[tiller] 2019/12/10 11:37:24 executing 0 post-delete hooks for dns
[tiller] 2019/12/10 11:37:24 hooks complete for post-delete dns
[tiller] 2019/12/10 11:37:24 purge requested for dns
[storage] 2019/12/10 11:37:24 deleting release "dns.v1"
[storage] 2019/12/10 11:37:25 getting last revision of "dns"
[storage] 2019/12/10 11:37:25 getting release history for "dns"
[tiller] 2019/12/10 11:37:28 preparing install for dns
[storage] 2019/12/10 11:37:28 getting release history for "dns"
[tiller] 2019/12/10 11:37:28 rendering external-dns chart using values
2019/12/10 11:37:28 info: manifest "external-dns/templates/psp.yaml" is empty. Skipping.
2019/12/10 11:37:28 info: manifest "external-dns/templates/psp-clusterrole.yaml" is empty. Skipping.
2019/12/10 11:37:28 info: manifest "external-dns/templates/crd.yaml" is empty. Skipping.
2019/12/10 11:37:28 info: manifest "external-dns/templates/psp-clusterrolebinding.yaml" is empty. Skipping.
2019/12/10 11:37:28 info: manifest "external-dns/templates/configmap.yaml" is empty. Skipping.
[tiller] 2019/12/10 11:37:28 performing install for dns
[tiller] 2019/12/10 11:37:28 executing 0 crd-install hooks for dns
[tiller] 2019/12/10 11:37:28 hooks complete for crd-install dns
[tiller] 2019/12/10 11:37:28 executing 0 pre-install hooks for dns
[tiller] 2019/12/10 11:37:28 hooks complete for pre-install dns
[storage] 2019/12/10 11:37:28 getting release history for "dns"
[storage] 2019/12/10 11:37:28 creating release "dns.v1"
[kube] 2019/12/10 11:37:28 building resources from manifest
[kube] 2019/12/10 11:37:28 creating 6 resource(s)
[kube] 2019/12/10 11:37:28 beginning wait for 6 resources with timeout of 5m0s
[kube] 2019/12/10 11:37:30 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:32 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:34 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:36 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:38 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:40 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:42 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:44 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:46 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:48 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:50 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:52 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:54 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:56 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:37:58 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:00 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:02 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:04 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:06 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:08 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:10 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:12 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:14 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:16 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:18 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:20 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:22 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:24 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:26 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:28 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:30 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:32 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:34 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:36 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:38 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:40 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:42 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:44 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:46 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:48 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:50 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:52 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:54 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:56 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:38:58 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:00 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:02 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:04 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:06 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:08 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:10 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:12 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:14 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:16 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:18 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:20 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:22 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:24 Deployment is not ready: kube-system/dns-external-dns
[storage] 2019/12/10 11:39:24 listing all releases with filter
[kube] 2019/12/10 11:39:26 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:28 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:30 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:32 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:34 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:36 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:38 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:40 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:42 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:44 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:46 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:48 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:50 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:52 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:54 Deployment is not ready: kube-system/dns-external-dns
[kube] 2019/12/10 11:39:56 Deployment is not ready: kube-system/dns-external-dns
[tiller] 2019/12/10 11:39:58 warning: Release "dns" failed: deployments.apps "dns-external-dns" not found
[storage] 2019/12/10 11:39:58 updating release "dns.v1"
[tiller] 2019/12/10 11:39:58 failed install perform step: release dns failed: deployments.apps "dns-external-dns" not found
[storage] 2019/12/10 11:40:37 getting last revision of "nginx"
[storage] 2019/12/10 11:40:37 getting release history for "nginx"
[storage] 2019/12/10 11:40:37 getting last revision of "loki"
[storage] 2019/12/10 11:40:37 getting release history for "loki"
[storage] 2019/12/10 11:40:38 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:40:38 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:40:39 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:40:39 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:40:39 getting last revision of "issuers"
[storage] 2019/12/10 11:40:39 getting release history for "issuers"
[storage] 2019/12/10 11:40:40 getting last revision of "loki"
[storage] 2019/12/10 11:40:40 getting release history for "loki"
[storage] 2019/12/10 11:40:40 getting last revision of "nginx"
[storage] 2019/12/10 11:40:40 getting release history for "nginx"
[storage] 2019/12/10 11:40:41 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:40:41 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:40:42 getting last revision of "issuers"
[storage] 2019/12/10 11:40:42 getting release history for "issuers"
[storage] 2019/12/10 11:40:47 getting last revision of "cert-manager"
[storage] 2019/12/10 11:40:47 getting release history for "cert-manager"
[storage] 2019/12/10 11:40:47 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:40:47 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:40:48 getting last revision of "cert-manager"
[storage] 2019/12/10 11:40:48 getting release history for "cert-manager"
[storage] 2019/12/10 11:40:54 getting last revision of "state"
[storage] 2019/12/10 11:40:54 getting release history for "state"
[storage] 2019/12/10 11:40:58 getting last revision of "state"
[storage] 2019/12/10 11:40:58 getting release history for "state"
[storage] 2019/12/10 11:43:28 getting last revision of "loki"
[storage] 2019/12/10 11:43:28 getting release history for "loki"
[storage] 2019/12/10 11:43:30 getting last revision of "nginx"
[storage] 2019/12/10 11:43:30 getting release history for "nginx"
[storage] 2019/12/10 11:43:30 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:43:30 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:43:30 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:43:30 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:43:30 getting last revision of "issuers"
[storage] 2019/12/10 11:43:30 getting release history for "issuers"
[storage] 2019/12/10 11:43:30 getting last revision of "loki"
[storage] 2019/12/10 11:43:30 getting release history for "loki"
[storage] 2019/12/10 11:43:31 getting last revision of "sealed-secrets"
[storage] 2019/12/10 11:43:31 getting release history for "sealed-secrets"
[storage] 2019/12/10 11:43:31 getting last revision of "nginx"
[storage] 2019/12/10 11:43:31 getting release history for "nginx"
[storage] 2019/12/10 11:43:32 getting last revision of "issuers"
[storage] 2019/12/10 11:43:32 getting release history for "issuers"
[storage] 2019/12/10 11:43:33 getting last revision of "cert-manager"
[storage] 2019/12/10 11:43:33 getting release history for "cert-manager"
[storage] 2019/12/10 11:43:34 getting last revision of "prometheus-operator"
[storage] 2019/12/10 11:43:34 getting release history for "prometheus-operator"
[storage] 2019/12/10 11:43:35 getting last revision of "cert-manager"
[storage] 2019/12/10 11:43:35 getting release history for "cert-manager"
[storage] 2019/12/10 11:43:40 getting last revision of "state"
[storage] 2019/12/10 11:43:40 getting release history for "state"
[storage] 2019/12/10 11:43:42 getting last revision of "state"
[storage] 2019/12/10 11:43:42 getting release history for "state"
[storage] 2019/12/10 11:44:12 getting last revision of "external-dns"
[storage] 2019/12/10 11:44:12 getting release history for "external-dns"
[tiller] 2019/12/10 11:44:19 preparing install for external-dns
[storage] 2019/12/10 11:44:19 getting release history for "external-dns"
[tiller] 2019/12/10 11:44:19 rendering external-dns chart using values
2019/12/10 11:44:19 info: manifest "external-dns/templates/crd.yaml" is empty. Skipping.
2019/12/10 11:44:19 info: manifest "external-dns/templates/configmap.yaml" is empty. Skipping.
2019/12/10 11:44:19 info: manifest "external-dns/templates/psp.yaml" is empty. Skipping.
2019/12/10 11:44:19 info: manifest "external-dns/templates/psp-clusterrolebinding.yaml" is empty. Skipping.
2019/12/10 11:44:19 info: manifest "external-dns/templates/psp-clusterrole.yaml" is empty. Skipping.
[tiller] 2019/12/10 11:44:19 performing install for external-dns
[tiller] 2019/12/10 11:44:19 executing 0 crd-install hooks for external-dns
[tiller] 2019/12/10 11:44:19 hooks complete for crd-install external-dns
[tiller] 2019/12/10 11:44:19 executing 0 pre-install hooks for external-dns
[tiller] 2019/12/10 11:44:19 hooks complete for pre-install external-dns
[storage] 2019/12/10 11:44:19 getting release history for "external-dns"
[storage] 2019/12/10 11:44:19 creating release "external-dns.v1"
[kube] 2019/12/10 11:44:19 building resources from manifest
[kube] 2019/12/10 11:44:19 creating 6 resource(s)
[kube] 2019/12/10 11:44:19 beginning wait for 6 resources with timeout of 5m0s
[kube] 2019/12/10 11:44:21 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:23 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:25 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:27 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:29 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:31 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:33 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:35 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:37 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:39 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:41 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:43 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:45 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:47 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:49 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:51 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:53 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:55 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:57 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:44:59 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:01 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:03 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:05 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:07 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:09 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:11 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:13 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:15 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:17 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:19 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:21 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:23 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:25 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:27 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:29 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:31 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:33 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:35 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:37 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:39 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:41 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:43 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:45 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:47 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:49 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:51 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:53 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:55 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:57 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:45:59 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:01 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:03 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:05 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:07 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:09 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:11 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:13 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:15 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:17 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:19 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:21 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:23 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:25 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:27 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:29 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:31 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:33 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:35 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:37 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:39 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:41 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:43 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:45 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:47 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:49 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:51 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:53 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:55 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:57 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:46:59 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:01 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:03 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:05 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:07 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:09 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:11 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:13 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:15 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:17 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:19 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:21 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:23 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:25 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:27 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:29 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:31 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:33 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:35 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:37 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:39 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:41 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:43 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:45 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:47 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:49 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:51 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:53 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:55 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:57 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:47:59 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:01 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:03 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:05 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:07 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:09 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:11 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:13 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:15 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:17 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:19 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:21 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:23 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:25 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:27 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:29 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:31 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:33 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:35 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:37 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:39 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:41 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:43 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:45 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:47 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:49 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:51 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:53 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:55 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:57 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:48:59 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:01 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:03 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:05 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:07 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:09 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:11 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:13 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:15 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:17 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:19 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 11:49:19 Deployment is not ready: kube-system/external-dns
[tiller] 2019/12/10 11:49:19 warning: Release "external-dns" failed: timed out waiting for the condition
[storage] 2019/12/10 11:49:19 updating release "external-dns.v1"
[tiller] 2019/12/10 11:49:19 failed install perform step: release external-dns failed: timed out waiting for the condition
[storage] 2019/12/10 12:40:07 getting last revision of "nginx"
[storage] 2019/12/10 12:40:07 getting release history for "nginx"
[storage] 2019/12/10 12:40:08 getting last revision of "loki"
[storage] 2019/12/10 12:40:08 getting release history for "loki"
[storage] 2019/12/10 12:40:10 getting last revision of "prometheus-operator"
[storage] 2019/12/10 12:40:10 getting release history for "prometheus-operator"
[storage] 2019/12/10 12:40:11 getting last revision of "sealed-secrets"
[storage] 2019/12/10 12:40:11 getting release history for "sealed-secrets"
[storage] 2019/12/10 12:40:11 getting last revision of "issuers"
[storage] 2019/12/10 12:40:11 getting release history for "issuers"
[storage] 2019/12/10 12:40:11 getting last revision of "loki"
[storage] 2019/12/10 12:40:11 getting release history for "loki"
[storage] 2019/12/10 12:40:12 getting last revision of "nginx"
[storage] 2019/12/10 12:40:12 getting release history for "nginx"
[storage] 2019/12/10 12:40:12 getting last revision of "sealed-secrets"
[storage] 2019/12/10 12:40:12 getting release history for "sealed-secrets"
[storage] 2019/12/10 12:40:13 getting last revision of "issuers"
[storage] 2019/12/10 12:40:13 getting release history for "issuers"
[storage] 2019/12/10 12:40:14 getting last revision of "prometheus-operator"
[storage] 2019/12/10 12:40:14 getting release history for "prometheus-operator"
[storage] 2019/12/10 12:40:14 getting last revision of "cert-manager"
[storage] 2019/12/10 12:40:14 getting release history for "cert-manager"
[storage] 2019/12/10 12:40:16 getting last revision of "cert-manager"
[storage] 2019/12/10 12:40:16 getting release history for "cert-manager"
[storage] 2019/12/10 12:40:19 getting last revision of "state"
[storage] 2019/12/10 12:40:19 getting release history for "state"
[storage] 2019/12/10 12:40:20 getting last revision of "state"
[storage] 2019/12/10 12:40:20 getting release history for "state"
[storage] 2019/12/10 12:40:53 getting last revision of "external-dns"
[storage] 2019/12/10 12:40:53 getting release history for "external-dns"
[storage] 2019/12/10 12:40:55 getting release history for "external-dns"
[tiller] 2019/12/10 12:40:55 uninstall: Deleting external-dns
[tiller] 2019/12/10 12:40:55 executing 0 pre-delete hooks for external-dns
[tiller] 2019/12/10 12:40:55 hooks complete for pre-delete external-dns
[storage] 2019/12/10 12:40:55 updating release "external-dns.v1"
[kube] 2019/12/10 12:40:55 Starting delete for "external-dns" Service
[kube] 2019/12/10 12:40:55 Starting delete for "external-dns" Deployment
[kube] 2019/12/10 12:40:55 Starting delete for "external-dns" ClusterRoleBinding
[kube] 2019/12/10 12:40:55 Starting delete for "external-dns" ClusterRole
[kube] 2019/12/10 12:40:55 Starting delete for "external-dns" ServiceAccount
[kube] 2019/12/10 12:40:55 Starting delete for "external-dns" Secret
[tiller] 2019/12/10 12:40:55 executing 0 post-delete hooks for external-dns
[tiller] 2019/12/10 12:40:55 hooks complete for post-delete external-dns
[tiller] 2019/12/10 12:40:55 purge requested for external-dns
[storage] 2019/12/10 12:40:55 deleting release "external-dns.v1"
[storage] 2019/12/10 12:40:56 getting last revision of "external-dns"
[storage] 2019/12/10 12:40:56 getting release history for "external-dns"
[tiller] 2019/12/10 12:40:59 preparing install for external-dns
[storage] 2019/12/10 12:40:59 getting release history for "external-dns"
[tiller] 2019/12/10 12:40:59 rendering external-dns chart using values
2019/12/10 12:40:59 info: manifest "external-dns/templates/configmap.yaml" is empty. Skipping.
2019/12/10 12:40:59 info: manifest "external-dns/templates/psp.yaml" is empty. Skipping.
2019/12/10 12:40:59 info: manifest "external-dns/templates/psp-clusterrolebinding.yaml" is empty. Skipping.
2019/12/10 12:40:59 info: manifest "external-dns/templates/crd.yaml" is empty. Skipping.
2019/12/10 12:40:59 info: manifest "external-dns/templates/secret.yaml" is empty. Skipping.
2019/12/10 12:40:59 info: manifest "external-dns/templates/psp-clusterrole.yaml" is empty. Skipping.
[tiller] 2019/12/10 12:40:59 performing install for external-dns
[tiller] 2019/12/10 12:40:59 executing 0 crd-install hooks for external-dns
[tiller] 2019/12/10 12:40:59 hooks complete for crd-install external-dns
[tiller] 2019/12/10 12:40:59 executing 0 pre-install hooks for external-dns
[tiller] 2019/12/10 12:40:59 hooks complete for pre-install external-dns
[storage] 2019/12/10 12:40:59 getting release history for "external-dns"
[storage] 2019/12/10 12:40:59 creating release "external-dns.v1"
[kube] 2019/12/10 12:40:59 building resources from manifest
[kube] 2019/12/10 12:40:59 creating 5 resource(s)
[kube] 2019/12/10 12:40:59 beginning wait for 5 resources with timeout of 5m0s
[kube] 2019/12/10 12:41:01 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 12:41:03 Deployment is not ready: kube-system/external-dns
[kube] 2019/12/10 12:41:05 Deployment is not ready: kube-system/external-dns
[tiller] 2019/12/10 12:41:07 executing 0 post-install hooks for external-dns
[tiller] 2019/12/10 12:41:07 hooks complete for post-install external-dns
[storage] 2019/12/10 12:41:07 updating release "external-dns.v1"
[storage] 2019/12/10 12:50:25 getting last revision of "nginx"
[storage] 2019/12/10 12:50:25 getting release history for "nginx"
[storage] 2019/12/10 12:50:26 getting last revision of "prometheus-operator"
[storage] 2019/12/10 12:50:26 getting release history for "prometheus-operator"
[storage] 2019/12/10 12:50:28 getting last revision of "loki"
[storage] 2019/12/10 12:50:28 getting release history for "loki"
[storage] 2019/12/10 12:50:29 getting last revision of "sealed-secrets"
[storage] 2019/12/10 12:50:29 getting release history for "sealed-secrets"
[storage] 2019/12/10 12:50:30 getting last revision of "external-dns"
[storage] 2019/12/10 12:50:30 getting release history for "external-dns"
[storage] 2019/12/10 12:50:30 getting last revision of "issuers"
[storage] 2019/12/10 12:50:30 getting release history for "issuers"
[storage] 2019/12/10 12:50:31 getting last revision of "nginx"
[storage] 2019/12/10 12:50:31 getting release history for "nginx"
[storage] 2019/12/10 12:50:31 getting last revision of "loki"
[storage] 2019/12/10 12:50:31 getting release history for "loki"
[storage] 2019/12/10 12:50:31 getting last revision of "sealed-secrets"
[storage] 2019/12/10 12:50:31 getting release history for "sealed-secrets"
[storage] 2019/12/10 12:50:32 getting last revision of "issuers"
[storage] 2019/12/10 12:50:32 getting release history for "issuers"
[storage] 2019/12/10 12:50:32 getting last revision of "prometheus-operator"
[storage] 2019/12/10 12:50:32 getting release history for "prometheus-operator"
[storage] 2019/12/10 12:50:32 getting last revision of "external-dns"
[storage] 2019/12/10 12:50:32 getting release history for "external-dns"
[storage] 2019/12/10 12:50:33 getting last revision of "cert-manager"
[storage] 2019/12/10 12:50:33 getting release history for "cert-manager"
[storage] 2019/12/10 12:50:35 getting last revision of "cert-manager"
[storage] 2019/12/10 12:50:35 getting release history for "cert-manager"
[storage] 2019/12/10 12:50:37 getting last revision of "state"
[storage] 2019/12/10 12:50:37 getting release history for "state"
[storage] 2019/12/10 12:50:38 getting last revision of "state"
[storage] 2019/12/10 12:50:38 getting release history for "state"
[tiller] 2019/12/10 12:51:34 preparing update for issuers
[storage] 2019/12/10 12:51:34 getting deployed releases from "issuers" history
[storage] 2019/12/10 12:51:34 getting last revision of "issuers"
[storage] 2019/12/10 12:51:34 getting release history for "issuers"
[tiller] 2019/12/10 12:51:34 rendering cluster-issuers chart using values
[tiller] 2019/12/10 12:51:35 creating updated release for issuers
[storage] 2019/12/10 12:51:35 creating release "issuers.v3"
[tiller] 2019/12/10 12:51:35 performing update for issuers
[tiller] 2019/12/10 12:51:35 executing 0 pre-upgrade hooks for issuers
[tiller] 2019/12/10 12:51:35 hooks complete for pre-upgrade issuers
[kube] 2019/12/10 12:51:35 building resources from updated manifest
[kube] 2019/12/10 12:51:35 checking 2 resources for changes
[kube] 2019/12/10 12:51:35 beginning wait for 2 resources with timeout of 5m0s
[tiller] 2019/12/10 12:51:37 executing 0 post-upgrade hooks for issuers
[tiller] 2019/12/10 12:51:37 hooks complete for post-upgrade issuers
[storage] 2019/12/10 12:51:37 updating release "issuers.v2"
[tiller] 2019/12/10 12:51:37 updating status for updated release for issuers
[storage] 2019/12/10 12:51:37 updating release "issuers.v3"
[storage] 2019/12/10 18:11:15 getting last revision of "nginx"
[storage] 2019/12/10 18:11:15 getting release history for "nginx"
[storage] 2019/12/10 18:11:15 getting last revision of "loki"
[storage] 2019/12/10 18:11:15 getting release history for "loki"
[storage] 2019/12/10 18:11:16 getting last revision of "prometheus-operator"
[storage] 2019/12/10 18:11:16 getting release history for "prometheus-operator"
[storage] 2019/12/10 18:11:16 getting last revision of "external-dns"
[storage] 2019/12/10 18:11:16 getting release history for "external-dns"
[storage] 2019/12/10 18:11:16 getting last revision of "sealed-secrets"
[storage] 2019/12/10 18:11:16 getting release history for "sealed-secrets"
[storage] 2019/12/10 18:11:16 getting last revision of "issuers"
[storage] 2019/12/10 18:11:16 getting release history for "issuers"
[storage] 2019/12/10 18:11:18 getting last revision of "nginx"
[storage] 2019/12/10 18:11:18 getting release history for "nginx"
[storage] 2019/12/10 18:11:18 getting last revision of "sealed-secrets"
[storage] 2019/12/10 18:11:18 getting release history for "sealed-secrets"
[storage] 2019/12/10 18:11:18 getting last revision of "loki"
[storage] 2019/12/10 18:11:18 getting release history for "loki"
[storage] 2019/12/10 18:11:18 getting last revision of "issuers"
[storage] 2019/12/10 18:11:18 getting release history for "issuers"
[storage] 2019/12/10 18:11:21 getting last revision of "external-dns"
[storage] 2019/12/10 18:11:21 getting release history for "external-dns"
[storage] 2019/12/10 18:11:23 getting last revision of "cert-manager"
[storage] 2019/12/10 18:11:23 getting release history for "cert-manager"
[storage] 2019/12/10 18:11:26 getting last revision of "cert-manager"
[storage] 2019/12/10 18:11:26 getting release history for "cert-manager"
[storage] 2019/12/10 18:11:27 getting last revision of "prometheus-operator"
[storage] 2019/12/10 18:11:27 getting release history for "prometheus-operator"
[storage] 2019/12/10 18:11:27 getting last revision of "state"
[storage] 2019/12/10 18:11:27 getting release history for "state"
[storage] 2019/12/10 18:11:29 getting last revision of "state"
[storage] 2019/12/10 18:11:29 getting release history for "state"
[storage] 2019/12/10 18:12:27 getting last revision of "prometheus-operator"
[storage] 2019/12/10 18:12:27 getting release history for "prometheus-operator"
[storage] 2019/12/10 18:12:27 getting last revision of "loki"
[storage] 2019/12/10 18:12:27 getting release history for "loki"
[storage] 2019/12/10 18:12:28 getting last revision of "nginx"
[storage] 2019/12/10 18:12:28 getting release history for "nginx"
[storage] 2019/12/10 18:12:29 getting last revision of "sealed-secrets"
[storage] 2019/12/10 18:12:29 getting release history for "sealed-secrets"
[storage] 2019/12/10 18:12:29 getting last revision of "issuers"
[storage] 2019/12/10 18:12:29 getting release history for "issuers"
[storage] 2019/12/10 18:12:29 getting last revision of "external-dns"
[storage] 2019/12/10 18:12:29 getting release history for "external-dns"
[storage] 2019/12/10 18:12:31 getting last revision of "loki"
[storage] 2019/12/10 18:12:31 getting release history for "loki"
[storage] 2019/12/10 18:12:31 getting last revision of "sealed-secrets"
[storage] 2019/12/10 18:12:31 getting release history for "sealed-secrets"
[storage] 2019/12/10 18:12:31 getting last revision of "nginx"
[storage] 2019/12/10 18:12:31 getting release history for "nginx"
[storage] 2019/12/10 18:12:32 getting last revision of "issuers"
[storage] 2019/12/10 18:12:32 getting release history for "issuers"
[storage] 2019/12/10 18:12:34 getting last revision of "external-dns"
[storage] 2019/12/10 18:12:34 getting release history for "external-dns"
[storage] 2019/12/10 18:12:36 getting last revision of "cert-manager"
[storage] 2019/12/10 18:12:36 getting release history for "cert-manager"
[storage] 2019/12/10 18:12:37 getting last revision of "prometheus-operator"
[storage] 2019/12/10 18:12:37 getting release history for "prometheus-operator"
[storage] 2019/12/10 18:12:37 getting last revision of "cert-manager"
[storage] 2019/12/10 18:12:37 getting release history for "cert-manager"
[storage] 2019/12/10 18:12:39 getting last revision of "state"
[storage] 2019/12/10 18:12:39 getting release history for "state"
[storage] 2019/12/10 18:12:43 getting last revision of "state"
[storage] 2019/12/10 18:12:43 getting release history for "state"
[storage] 2019/12/10 18:18:57 getting last revision of "prometheus-operator"
[storage] 2019/12/10 18:18:57 getting release history for "prometheus-operator"
[storage] 2019/12/10 18:18:57 getting last revision of "nginx"
[storage] 2019/12/10 18:18:57 getting release history for "nginx"
[storage] 2019/12/10 18:18:58 getting last revision of "loki"
[storage] 2019/12/10 18:18:58 getting release history for "loki"
[storage] 2019/12/10 18:18:58 getting last revision of "external-dns"
[storage] 2019/12/10 18:18:58 getting release history for "external-dns"
[storage] 2019/12/10 18:18:59 getting last revision of "sealed-secrets"
[storage] 2019/12/10 18:18:59 getting release history for "sealed-secrets"
[storage] 2019/12/10 18:19:00 getting last revision of "issuers"
[storage] 2019/12/10 18:19:00 getting release history for "issuers"
[storage] 2019/12/10 18:19:02 getting last revision of "loki"
[storage] 2019/12/10 18:19:02 getting release history for "loki"
[storage] 2019/12/10 18:19:02 getting last revision of "nginx"
[storage] 2019/12/10 18:19:02 getting release history for "nginx"
[storage] 2019/12/10 18:19:03 getting last revision of "sealed-secrets"
[storage] 2019/12/10 18:19:03 getting release history for "sealed-secrets"
[storage] 2019/12/10 18:19:04 getting last revision of "issuers"
[storage] 2019/12/10 18:19:04 getting release history for "issuers"
[storage] 2019/12/10 18:19:04 getting last revision of "external-dns"
[storage] 2019/12/10 18:19:04 getting release history for "external-dns"
[storage] 2019/12/10 18:19:07 getting last revision of "cert-manager"
[storage] 2019/12/10 18:19:07 getting release history for "cert-manager"
[storage] 2019/12/10 18:19:07 getting last revision of "prometheus-operator"
[storage] 2019/12/10 18:19:07 getting release history for "prometheus-operator"
[storage] 2019/12/10 18:19:08 getting last revision of "cert-manager"
[storage] 2019/12/10 18:19:08 getting release history for "cert-manager"
[storage] 2019/12/10 18:19:13 getting last revision of "state"
[storage] 2019/12/10 18:19:13 getting release history for "state"
[storage] 2019/12/10 18:19:14 getting last revision of "state"
[storage] 2019/12/10 18:19:14 getting release history for "state"
==== END logs for container tiller of pod kube-system/tiller-deploy-586965d498-5ts64 ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/events",
        "resourceVersion": "263249"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/replicationcontrollers",
        "resourceVersion": "263249"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/services",
        "resourceVersion": "263249"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/kubernetes",
                "uid": "fed3415e-1ab6-11ea-8a75-0211540fed66",
                "resourceVersion": "184",
                "creationTimestamp": "2019-12-09T19:06:24Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "clusterIP": "172.20.0.1",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/daemonsets",
        "resourceVersion": "263249"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/deployments",
        "resourceVersion": "263250"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/replicasets",
        "resourceVersion": "263251"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/pods",
        "resourceVersion": "263251"
    },
    "items": []
}
Cluster info dumped to standard output
